{"version":3,"file":"static/js/9477.c007c874.chunk.js","mappings":"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","sources":["app/main/uploads/store/index.js","app/main/uploads/store/uploadSlice.js","app/main/uploads/store/uploadsSlice.js","app/main/uploads/upload/UploadHeader.js","app/main/uploads/upload/BasicInfo.js","app/main/uploads/upload/Upload.js","app/utils/index.js","../node_modules/@mui/material/ToggleButton/toggleButtonClasses.js","../node_modules/@mui/material/ToggleButton/ToggleButton.js","../node_modules/@mui/material/ToggleButtonGroup/isValueSelected.js","../node_modules/@mui/material/ToggleButtonGroup/toggleButtonGroupClasses.js","../node_modules/@mui/material/ToggleButtonGroup/ToggleButtonGroup.js"],"sourcesContent":["import { combineReducers } from \"@reduxjs/toolkit\";\n\nimport uploads from \"./uploadsSlice\";\nimport upload from \"./uploadSlice\";\n\nconst reducer = combineReducers({\n  uploads,\n  upload,\n});\n\nexport default reducer;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { API_VERSION, API_VERSION3, BASE_URL, TOKEN } from \"app/configs/settingsConfig\";\n\n\nexport const addFile = createAsyncThunk(\n  \"uploadsApp/upload/addFile\",\n  async (fileData, { dispatch, getState }) => {\n    console.log('fileData', fileData)\n    const response = await axios.post(\n      BASE_URL + API_VERSION3 + \"/back/files\",\n      fileData,\n      { headers: { Authorization: TOKEN } }\n    );\n    const data = await response.data;\n    return data;\n  }\n);\n\nexport const processFile = createAsyncThunk(\n  \"uploadsApp/upload/processFile\",\n  async (fileData, { dispatch, getState }) => {\n    console.log('fileData', fileData)\n    const response = await axios.post(\n      BASE_URL + API_VERSION3 + \"/back/process/upload_file\",\n      fileData,\n      { headers: { Authorization: TOKEN } }\n    );\n    const data = await response.data;\n    return data;\n  }\n);\n\n\n\n\nconst uploadSlice = createSlice({\n  name: \"uploadsApp/upload\",\n  initialState: {\n    upload: { enabled: true },\n  },\n  reducers: {\n    resetUpload: () => null,\n    newUpload: {\n      reducer: (state, action) => action.payload,\n      prepare: (event) => ({\n        payload: {\n          enabled: true,\n        },\n      }),\n    },\n    setUpload: {\n      reducer: (state, action) => action.payload,\n    },\n  },\n});\n\nexport const { resetUpload, newUpload, setUpload } = uploadSlice.actions;\n\nexport const selectUpload = ({ uploadsApp }) => uploadsApp.upload;\n\nexport default uploadSlice.reducer;\n","import {\n  createAsyncThunk,\n  createEntityAdapter,\n  createSlice,\n} from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { API_VERSION, API_VERSION3, BASE_URL, TOKEN } from \"app/configs/settingsConfig\";\n\nexport const getUploads = createAsyncThunk(\n  \"uploadsApp/getUploads\",\n  async () => {\n    const response = await axios.get(\n      BASE_URL + API_VERSION3 + `/back/competences`,\n      {\n        headers: { Authorization: TOKEN },\n      }\n    );\n    const data = await response.data;\n    return data;\n  }\n);\nexport const getVariables = createAsyncThunk(\n  \"uploadsApp/getVariables\",\n  async () => {\n    const response = await axios.get(\n      BASE_URL + API_VERSION3 + \"/back/competences/variables\",\n      {\n        headers: { Authorization: TOKEN },\n      }\n    );\n    const data = await response.data;\n    return data;\n  }\n);\n\nexport const getUploadedFiles = createAsyncThunk(\n  \"uploadsApp/getUploadedFiles\",\n  async () => {\n    const response = await axios.get(\n      BASE_URL + API_VERSION3 + \"/back/process/uploaded_files\",\n      {\n        headers: { Authorization: TOKEN },\n      }\n    );\n    const data = await response.data;\n    return data;\n  }\n);\n\n\n\n\nconst uploadsAdapter = createEntityAdapter({});\n\nexport const { selectAll: selectUploads, selectById: selectUploadById } =\n  uploadsAdapter.getSelectors((state) => state.uploadsApp.uploads);\n\nconst uploadsSlice = createSlice({\n  name: \"uploadsApp\",\n  initialState: uploadsAdapter.getInitialState({\n    searchText: \"\",\n    variables: [],\n  }),\n  reducers: {\n    setUploadsSearchText: {\n      reducer: (state, action) => {\n        state.searchText = action.payload;\n      },\n      prepare: (event) => ({ payload: event.target.value || \"\" }),\n    },\n  },\n  extraReducers: {\n    [getUploads.fulfilled]: uploadsAdapter.setAll,\n    [getVariables.fulfilled]: (state, action) => {\n      state.variables = action.payload;\n    },\n    [getUploadedFiles.fulfilled]: (state, action) => {\n      state.variables = action.payload;\n    },\n\n  },\n});\n\nexport const { setUploadsSearchText } = uploadsSlice.actions;\n\nexport const selectUploadsSearchText = ({ uploadsApp }) =>\n  uploadsApp.uploads.searchText;\nexport const selectVariables = ({ uploadsApp }) => uploadsApp.uploads.variables;\n\nexport default uploadsSlice.reducer;\n","import { useState, useEffect } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport { useTheme } from \"@mui/material/styles\";\nimport Typography from \"@mui/material/Typography\";\nimport { motion } from \"framer-motion\";\nimport { useFormContext } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport _ from \"@lodash\";\nimport FuseSvgIcon from \"@fuse/core/FuseSvgIcon\";\nimport Alert from \"@mui/material/Alert\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { upLoadImg } from \"../../../utils\";\n\nimport {\n  getStorage,\n  ref,\n  listAll,\n  getDownloadURL,\n  uploadBytes,\n} from \"firebase/storage\";\nimport { selectUser } from \"app/store/userSlice\";\nimport { upLoadSingleImg } from \"../../../utils\";\n\nfunction UploadHeader(props) {\n  const { params } = props;\n\n  const dispatch = useDispatch();\n  const methods = useFormContext();\n  const { formState, watch, getValues } = methods;\n  const { isValid, dirtyFields } = formState;\n  const theme = useTheme();\n  const navigate = useNavigate();\n  const images = watch(\"image\");\n  const [openAlert, setAlert] = useState({\n    msg: \"\",\n    alert: \"\",\n  });\n  const [preview, setPreview] = useState();\n  const routeParams = useParams();\n  const { uploadId } = routeParams;\n  const storage = getStorage();\n  const user = useSelector(selectUser);\n  const excel_file = watch(\"file_id\");\n  console.log('header', images)\n\n  const handleSaveUpload = async () => {\n    const data = getValues();\n    console.log('data a guardar: ', data);\n\n    if (\n      data.name === '' ||\n      data.image === undefined ||\n      data.type === '' ||\n      data.start_date === '' ||\n      data.due_date === '' ||\n      data.file_id === undefined ||\n      data.terms === ''\n    ) {\n      setAlert({\n        msg: \"Existen campos vacíos\",\n        alert: false,\n      });\n    } else {\n      if (uploadId === \"new\") {\n        const fileData = {\n          //user_id: user.data.displayName,\n          user_id: 'jose.bozzone',\n          file_name: excel_file.name,\n          type: 'competencia',\n          url: '',\n        };\n\n        const fileRef = ref(storage, `files/${data.name}`);\n        await uploadBytes(fileRef, excel_file);\n        const response = await dispatch(addFile(fileData));\n        data.file_id = response.payload.res.id;\n\n        upLoadSingleImg(data, images).then(() => {\n          dispatch(addUpload(data)).then(() => {\n            navigate(\"/uploads\");\n          });\n        });\n\n      } else {\n        const result = Object.fromEntries(\n          Object.entries(data).filter((k) => k[0] !== \"updated_at\")\n        );\n        const fileData = {\n          // user_id: user.data.displayName,\n          user_id: 'jose.bozzone',\n          file_name: excel_file.name,\n          type: 'competencia',\n          url: '',\n        };\n\n        const fileRef = ref(storage, `files/${data.name}`);\n        await uploadBytes(fileRef, excel_file);\n        const response = await dispatch(addFile(fileData));\n        result.file_id = response.payload.res.id;\n        console.log('resul;t', result)\n        upLoadSingleImg(result, images).then(() => {\n          dispatch(updateUpload(result)).then(() => {\n            navigate(\"/uploads\");\n          });\n        });\n        // TODO  agregar subir archivo excel al actualizar\n        //updateUpload(result).then(() => setAlert(true));\n        //TODO agregar codigo para subir el excel\n      }\n    }\n  };\n\n  function handleRemoveUpload() {\n    const data = getValues();\n    dispatch(removeUpload(data.id)).then(() => {\n      navigate(\"/uploads\");\n    });\n  }\n\n  ///TODO eliminar este useEffect, creado para ver los archivos en el storage\n  /*useEffect(() => {\n    const listRef = ref(storage, \"files/bingo\");\n  \n    listAll(listRef)\n      .then((res) => {\n        console.log(res, \"res\");\n        res.prefixes.forEach((folderRef) => {\n          console.log(folderRef, \"folderRef\");\n        });\n        res.items.forEach((itemRef) => {\n          console.log(itemRef, \"itemRef\");\n        });\n      })\n      .catch((error) => { });\n  }, []);*/\n\n  useEffect(() => {\n    //actualizo la imagen en el header\n    if (images?.name !== undefined) {\n      const reader = new FileReader();\n      reader.addEventListener(\"load\", () => {\n        setPreview(reader.result);\n      });\n      reader.readAsDataURL(images);\n    } else {\n      setPreview(images);\n    }\n  }, [images]);\n\n  return (\n    <div className=\"flex flex-col flex-1 w-full \">\n      <div className=\"flex flex-col sm:flex-row flex-1 w-full items-center justify-between space-y-8 sm:space-y-0 py-32 px-24 md:px-32\">\n        <div className=\"flex flex-col items-center sm:items-start space-y-8 sm:space-y-0 w-full sm:max-w-full min-w-0\">\n          <motion.div\n            initial={{ x: 20, opacity: 0 }}\n            animate={{ x: 0, opacity: 1, transition: { delay: 0.3 } }}\n          >\n            <Typography\n              className=\"flex items-center sm:mb-12\"\n              component={Link}\n              role=\"button\"\n              to=\"/uploads\"\n              color=\"inherit\"\n            >\n              <FuseSvgIcon size={20}>\n                {theme.direction === \"ltr\"\n                  ? \"heroicons-outline:arrow-sm-left\"\n                  : \"heroicons-outline:arrow-sm-right\"}\n              </FuseSvgIcon>\n              <span className=\"flex mx-4 font-medium\">Competencias</span>\n            </Typography>\n          </motion.div>\n          <div className=\"flex max-w-full\">\n            <div className=\"flex relative \">\n              <motion.div\n                className=\"hidden  sm:flex\"\n                initial={{ scale: 0 }}\n                animate={{ scale: 1, transition: { delay: 0.3 } }}\n              >\n                {images ? (\n                  <img\n                    //  className=\"w-52 sm:w-48 rounded\"\n                    width={150}\n                    src={preview}\n                  />\n                ) : (\n                  <img\n                    //    className=\"w-32 sm:w-48 rounded\"\n                    width={200}\n                    src=\"assets/images/apps/ecommerce/product-image-placeholder.png\"\n                  />\n                )}\n              </motion.div>\n            </div>\n            <motion.div\n              className=\"flex flex-col items-center sm:items-start min-w-0 mx-8 sm:mx-16\"\n              initial={{ x: -20 }}\n              animate={{ x: 0, transition: { delay: 0.3 } }}\n            >\n              <Typography className=\"text-16 sm:text-20 truncate font-semibold\">\n                {params === 'new'\n                  ? \"Nueva Competencia\"\n                  : params === 'update'\n                    ? \"Actualizar Competencia\"\n                    : 'Vista de Competencia'}\n              </Typography>\n              <Typography variant=\"caption\" className=\"font-medium\">\n                Detalle de la Competencia\n              </Typography>\n            </motion.div>\n          </div>\n        </div>\n        <motion.div\n          className=\"flex\"\n          initial={{ opacity: 0, x: 20 }}\n          animate={{ opacity: 1, x: 0, transition: { delay: 0.3 } }}\n        >\n          <Button\n            className=\"whitespace-nowrap mx-4\"\n            variant=\"contained\"\n            color=\"secondary\"\n            disabled={params === 'view'}\n            /*disabled={\n              uploadId === \"new\" ? _.isEmpty(dirtyFields) || !isValid : null\n            }*/\n            onClick={handleRemoveUpload}\n          >\n            Eliminar\n          </Button>\n          <Button\n            className=\"whitespace-nowrap mx-4\"\n            variant=\"contained\"\n            color=\"secondary\"\n            disabled={params === 'view'}\n            /*disabled={\n              uploadId === \"new\" ? _.isEmpty(dirtyFields) || !isValid : null\n            }*/\n            onClick={handleSaveUpload}\n          >\n            Guardar\n          </Button>\n\n        </motion.div>\n      </div>\n      {openAlert.alert && (\n        <Alert severity=\"success\">Los datos se guardaron correctamente</Alert>\n      )}\n      {openAlert.alert === false ? (\n        <Alert severity=\"error\">{openAlert.msg}</Alert>\n      ) : null}\n    </div>\n  );\n}\n\nexport default UploadHeader;\n","import React, { useEffect, useState } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport { Controller, useFormContext } from \"react-hook-form\";\nimport { Button, Grid, Typography, ToggleButtonGroup, ToggleButton } from \"@mui/material\";\nimport moment from \"moment\";\n//import * as XLSX from 'xlsx';\n//import axios from \"axios\";\n/*import {\n  getStorage,\n  ref,\n  listAll,\n  getDownloadURL,\n} from \"firebase/storage\";*/\n\nfunction BasicInfo(props) {\n  const { params } = props;\n  const methods = useFormContext();\n  const { control, formState } = methods;\n  //const storage = getStorage();\n  const { errors } = formState;\n  const {\n    id,\n    name,\n    type,\n    start_date,\n    due_date,\n    image,\n    channel,\n    gec,\n    file_id,\n    terms,\n    enabled,\n\n  } = control._formValues;\n  //console.log('params', params)\n  const [types, setTypes] = useState(null);\n\n  const handleChangeDest = (event, newValue) => {\n    setTypes(newValue); // actualizar el estado del tipo seleccionado\n  };\n\n  /*const getExcelData = async () => {\n    const fileRef = ref(storage, `files/${name}`);\n    const urlExcel = await getDownloadURL(fileRef);\n    console.log('urlExcel: ', urlExcel)\n\n    getDownloadURL(fileRef).then(url => {\n      axios.get(url, { responseType: 'blob' })\n        .then(response => {\n          const reader = new FileReader();\n          reader.readAsArrayBuffer(response.data);\n          reader.onload = () => {\n            const data = new Uint8Array(reader.result);\n            const workbook = XLSX.read(data, { type: 'array' });\n            const worksheet = workbook.Sheets[workbook.SheetNames[0]];\n            const sheetData = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\n            console.log(sheetData);\n          };\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    });\n\n\n  }\n\n\n  if (params === 'view') {\n    useEffect(() => {\n      getExcelData()\n    }, [name])\n\n  }*/\n\n\n\n\n\n  return (\n    <div className=\"ml-10\">\n      <Grid\n        container\n        padding={5}\n        rowSpacing={2}\n        columnSpacing={{ xs: 1, sm: 1, md: 3 }}\n      >\n        <Grid item xs={6} md={3} >\n          <Typography className=\"text-12 sm:text-18 truncate font-semibold\">\n            Nombre\n          </Typography>\n          <Controller\n            name=\"name\"\n            control={control}\n            render={({ field }) => (\n              <TextField\n                className=\"mt-8 mb-16\"\n                required\n                error={!!errors.name}\n                helperText={errors?.name?.message}\n                {...field}\n                value={field.value || ''}\n                placeholder=\"Ingrese Nombre\"\n                autoFocus\n                id=\"name\"\n                variant=\"outlined\"\n                fullWidth\n                disabled={params === 'view'}\n              />\n            )}\n          />\n        </Grid>\n        <Grid item xs={6} md={2} textAlign={\"center\"}>\n          <Typography className=\"text-16 sm:text-18 truncate font-semibold\">\n            Desde\n          </Typography>\n          <Controller\n            name=\"start_date\"\n            control={control}\n            render={({ field }) => (\n              <TextField\n                {...field}\n                className=\"mt-8 mb-16\"\n                type='date'\n                required\n                value={field.value ? moment(field.value).format('YYYY-MM-DD') : ''}\n\n                id=\"start_date\"\n                variant=\"outlined\"\n                fullWidth\n                disabled={params === 'view'}\n              />\n            )}\n          />\n        </Grid>\n        <Grid item xs={6} md={2} textAlign={\"center\"}>\n          <Typography className=\"text-16 sm:text-18 truncate font-semibold\">\n            Hasta\n          </Typography>\n          <Controller\n            name=\"due_date\"\n            control={control}\n            render={({ field }) => (\n              <TextField\n                {...field}\n                className=\"mt-8 mb-16\"\n                required\n                type='date'\n                value={field.value ? moment(field.value).format('YYYY-MM-DD') : ''}\n\n                id=\"due_name\"\n                variant=\"outlined\"\n                fullWidth\n                disabled={params === 'view'}\n              />\n            )}\n          />\n        </Grid>\n        <Grid item xs={4} md={2}>\n          <Typography className=\"text-16 sm:text-18 truncate font-semibold\">\n            Destinatarios\n          </Typography>\n          <Controller\n            name=\"type\"\n            control={control}\n            render={({ field }) => (\n              <ToggleButtonGroup\n                {...field}\n                value={field.value || types}\n                exclusive\n                onChange={(event, newValue) => {\n                  field.onChange(newValue); // actualizar el valor del campo 'type'\n                  handleChangeDest(event, newValue); // actualizar el estado del tipo seleccionado\n                }}\n                aria-label=\"channel or client\"\n                id='type'\n                disabled={params === 'view'}\n              >\n                <ToggleButton value=\"channel\" aria-label=\"channel\" >\n                  Canal\n                </ToggleButton>\n                <ToggleButton value=\"clients\" aria-label=\"clients\" >\n                  Cliente\n                </ToggleButton>\n              </ToggleButtonGroup>\n            )}\n          />\n        </Grid>\n        <Grid item xs={4} md={2}>\n          <Typography className=\"text-14 sm:text-18 truncate font-semibold\">\n            Excel\n          </Typography>\n          <Controller\n            name=\"file_id\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <div className=\"mt-8 mb-16 flex flex-row  items-center\">\n                <Button variant=\"contained\" component=\"label\" color=\"primary\">\n                  Cargar\n                  <input\n                    accept=\".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\n                    className=\"hidden\"\n                    id=\"button-avatar\"\n                    type=\"file\"\n                    disabled={params === 'view'}\n                    onChange={(e) => {\n                      const file = e.target.files[0];\n                      if (!file) {\n                        return;\n                      }\n                      onChange(file);\n                    }}\n                  />\n                </Button>\n                <Typography className=\"text-14 sm:text-18 ml-10\">\n                  {file_id?.name || \"\"}\n                </Typography>\n\n              </div>\n            )}\n          />\n        </Grid>\n      </Grid>\n      <Grid\n        container\n        padding={5}\n        rowSpacing={2}\n        columnSpacing={{ xs: 1, sm: 1, md: 3 }}\n      >\n\n        <Grid item xs={4} md={3}>\n          <Typography className=\"text-16 sm:text-18 truncate font-semibold\">\n            Imagen Encabezado\n          </Typography>\n          <Controller\n            name=\"image\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <Button variant=\"contained\" component=\"label\" color=\"primary\">\n                Cargar imagen\n                <input\n                  accept=\"image/*\"\n                  className=\"hidden\"\n                  id=\"button-avatar\"\n                  type=\"file\"\n                  disabled={params === 'view'}\n                  onChange={(e) => {\n                    const file = e.target.files[0];\n                    if (!file) {\n                      return;\n                    }\n                    onChange(file);\n                  }}\n                />\n              </Button>\n            )}\n          />\n        </Grid>\n      </Grid>\n      <Grid\n        container\n        padding={5}\n        rowSpacing={2}\n        columnSpacing={{ xs: 1, sm: 1, md: 3 }}\n      >\n        <Grid item xs={6} md={12}>\n          <Typography className=\"text-16 sm:text-18 truncate font-semibold\">\n            Reglamento y Legales\n          </Typography>\n          <Controller\n            name=\"terms\"\n            control={control}\n            render={({ field }) => (\n              <TextField\n                {...field}\n                className=\"mt-8 mb-16\"\n                required\n                id=\"terms\"\n                variant=\"outlined\"\n                fullWidth\n                placeholder=\"Ingrese el Reglamento\"\n                multiline\n                rows={5}\n                disabled={params === 'view'}\n              />\n            )}\n          />\n        </Grid>\n      </Grid>\n    </div >\n  );\n}\n\nexport default BasicInfo;\n","import FuseLoading from \"@fuse/core/FuseLoading\";\nimport _ from \"@lodash\";\nimport FusePageCarded from \"@fuse/core/FusePageCarded\";\nimport withReducer from \"app/store/withReducer\";\nimport { useDeepCompareEffect } from \"@fuse/hooks\";\nimport Typography from \"@mui/material/Typography\";\nimport { motion } from \"framer-motion\";\nimport Button from \"@mui/material/Button\";\nimport { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams, Link, useLocation } from \"react-router-dom\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport useThemeMediaQuery from \"@fuse/hooks/useThemeMediaQuery\";\nimport {\n  selectUpload,\n  setUpload,\n  resetUpload,\n  newUpload,\n} from \"../store/uploadSlice\";\nimport reducer from \"../store\";\nimport UploadHeader from \"./UploadHeader\";\nimport BasicInfo from \"./BasicInfo\";\n\nconst schema = yup.object().shape({\n  image: yup\n    .mixed()\n    .test(\"required\", \"You need to provide a file\", (file) => {\n      return file && file.size; // <-- u can use this if you don't want to allow empty files to be uploaded;\n    }),\n});\n\nfunction Upload(props) {\n  const dispatch = useDispatch();\n  const upload = useSelector(selectUpload);\n  const isMobile = useThemeMediaQuery((theme) => theme.breakpoints.down(\"lg\"));\n  const routeParams = useParams();\n  const [noUpload, setnoUpload] = useState(false);\n  const methods = useForm({\n    mode: \"onChange\",\n    defaultValues: {\n      enabled: true,\n    },\n    resolver: yupResolver(schema),\n  });\n  const { reset, watch, control, onChange, formState } = methods;\n  const form = watch();\n  const location = useLocation();\n\n  useDeepCompareEffect(() => {\n    function updateUploadState() {\n      const { uploadId } = routeParams;\n\n      if (uploadId === \"new\") {\n        dispatch(newUpload());\n      } else {\n        dispatch(setUpload(location.state));\n      }\n    }\n\n    updateUploadState();\n  }, [dispatch, routeParams, location]);\n\n  useEffect(() => {\n    if (!upload) {\n      return;\n    }\n    /**\n     * Reset the form on upload state changes\n     */\n    reset(upload);\n  }, [upload, reset]);\n\n  useEffect(() => {\n    return () => {\n      dispatch(resetUpload());\n      setnoUpload(false);\n    };\n  }, [dispatch]);\n\n  if (noUpload) {\n    return (\n      <motion.div\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1, transition: { delay: 0.1 } }}\n        className=\"flex flex-col flex-1 items-center justify-center h-full\"\n      >\n        <Typography color=\"text.secondary\" variant=\"h5\">\n          No hay Competencias\n        </Typography>\n        <Button\n          className=\"mt-24\"\n          component={Link}\n          variant=\"outlined\"\n          to=\"/uploads\"\n          color=\"inherit\"\n        >\n          Volver a Competencias\n        </Button>\n      </motion.div>\n    );\n  }\n\n  if (\n    _.isEmpty(form) ||\n    (upload &&\n      routeParams.uploadId !== upload.id &&\n      routeParams.uploadId !== \"new\" &&\n      routeParams.uploadId !== \"update\" &&\n      routeParams.uploadId !== \"view\")\n  ) {\n    return <FuseLoading />;\n  }\n  return (\n    <FormProvider {...methods}>\n      <FusePageCarded\n        header={<UploadHeader params={routeParams.uploadId} />}\n        content={<BasicInfo params={routeParams.uploadId} />}\n        scroll={isMobile ? \"normal\" : \"content\"}\n      />\n    </FormProvider>\n  );\n}\n\nexport default withReducer(\"uploadsApp\", reducer)(Upload);\n","import { ref, uploadBytes, getDownloadURL, listAll } from \"firebase/storage\";\nimport { storage } from \"../configs/fbServices\";\n\n \nexport const getDay = ()=>{\n    const date = new Date();\n    const year = date.getFullYear();\n    // 👇️ getMonth returns integer from 0(January) to 11(December)\n    const month = date.getMonth() + 1;\n    const day = date.getDate();\n    const dateStr = [day, month,year].join('_');\n    return dateStr\n  }\n/**\n * cupones - sube imagen y guarda la url en el objeto data(datos del formulario)\n * fortato del objeto:\n * {\n    \"img_brief\": \"https://firebasestorage.googleapis.com/v0/b/femsa-arg.appspot.com/o/coupons%2F1a.webp?alt=media&token=632f9f00-838b-4699-ba84-08a975c538b2\",\n    \"img_description\": \"https://firebasestorage.googleapis.com/v0/b/femsa-arg.appspot.com/o/coupons%2F1b.webp?alt=media&token=ef6297d7-e0c3-48d9-a87e-a811579100e7\",\n    \"enabled\": true\n}\n * \n */\n export const upLoadImg = async (data) => {\n    const result = await Promise.all(\n      Object.entries(data).map(async (img_item) => {\n        if (\n          (img_item[0] === \"img_brief\" || img_item[0] === \"img_description\") &&\n          img_item[1].name\n        ) {\n          const today = getDay()\n          const imageRef = ref(\n            storage,\n            `coupons/${img_item[1].name + \"_\" + today}`\n          );\n          await uploadBytes(imageRef, img_item[1]);\n          data[img_item[0]] = await getDownloadURL(imageRef);\n        }\n      })\n    );\n  };\n\n/**\n * formato del objeto para crear el slider\n * \n{\n    \"image\": \"https://firebasestorage.googleapis.com/v0/b/femsa-arg.appspot.com/o/coupons%2F1a.webp?alt=media&token=632f9f00-838b-4699-ba84-08a975c538b2\",\n    \"type\": \"clients\"\n}\n */\n\n  export const upLoadSingleImg = async (data, images) => {\n    if (images.name) {\n      const today = getDay();\n      const imageRef = ref(storage, `sliders/${images.name + \"_\" + today}`);\n      await uploadBytes(imageRef, images);\n      data.image = await getDownloadURL(imageRef);\n    }\n  };\n\n  export const formatFileSize = (bytes,decimalPoint) =>{\n    if(bytes == 0) return '0 Bytes';\n    var k = 1000,\n        dm = decimalPoint || 2,\n        sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\n        i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n }","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getToggleButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiToggleButton', slot);\n}\nconst toggleButtonClasses = generateUtilityClasses('MuiToggleButton', ['root', 'disabled', 'selected', 'standard', 'primary', 'secondary', 'sizeSmall', 'sizeMedium', 'sizeLarge']);\nexport default toggleButtonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"color\", \"disabled\", \"disableFocusRipple\", \"fullWidth\", \"onChange\", \"onClick\", \"selected\", \"size\", \"value\"];\n// @inheritedComponent ButtonBase\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '../styles';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport toggleButtonClasses, { getToggleButtonUtilityClass } from './toggleButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    fullWidth,\n    selected,\n    disabled,\n    size,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', selected && 'selected', disabled && 'disabled', fullWidth && 'fullWidth', `size${capitalize(size)}`, color]\n  };\n  return composeClasses(slots, getToggleButtonUtilityClass, classes);\n};\n\nconst ToggleButtonRoot = styled(ButtonBase, {\n  name: 'MuiToggleButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`size${capitalize(ownerState.size)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  let selectedColor = ownerState.color === 'standard' ? theme.palette.text.primary : theme.palette[ownerState.color].main;\n  let selectedColorChannel;\n\n  if (theme.vars) {\n    selectedColor = ownerState.color === 'standard' ? theme.vars.palette.text.primary : theme.vars.palette[ownerState.color].main;\n    selectedColorChannel = ownerState.color === 'standard' ? theme.vars.palette.text.primaryChannel : theme.vars.palette[ownerState.color].mainChannel;\n  }\n\n  return _extends({}, theme.typography.button, {\n    borderRadius: (theme.vars || theme).shape.borderRadius,\n    padding: 11,\n    border: `1px solid ${(theme.vars || theme).palette.divider}`,\n    color: (theme.vars || theme).palette.action.active\n  }, ownerState.fullWidth && {\n    width: '100%'\n  }, {\n    [`&.${toggleButtonClasses.disabled}`]: {\n      color: (theme.vars || theme).palette.action.disabled,\n      border: `1px solid ${(theme.vars || theme).palette.action.disabledBackground}`\n    },\n    '&:hover': {\n      textDecoration: 'none',\n      // Reset on mouse devices\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.text.primaryChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    [`&.${toggleButtonClasses.selected}`]: {\n      color: selectedColor,\n      backgroundColor: theme.vars ? `rgba(${selectedColorChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(selectedColor, theme.palette.action.selectedOpacity),\n      '&:hover': {\n        backgroundColor: theme.vars ? `rgba(${selectedColorChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(selectedColor, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.vars ? `rgba(${selectedColorChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(selectedColor, theme.palette.action.selectedOpacity)\n        }\n      }\n    }\n  }, ownerState.size === 'small' && {\n    padding: 7,\n    fontSize: theme.typography.pxToRem(13)\n  }, ownerState.size === 'large' && {\n    padding: 15,\n    fontSize: theme.typography.pxToRem(15)\n  });\n});\nconst ToggleButton = /*#__PURE__*/React.forwardRef(function ToggleButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiToggleButton'\n  });\n\n  const {\n    children,\n    className,\n    color = 'standard',\n    disabled = false,\n    disableFocusRipple = false,\n    fullWidth = false,\n    onChange,\n    onClick,\n    selected,\n    size = 'medium',\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    disabled,\n    disableFocusRipple,\n    fullWidth,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  const handleChange = event => {\n    if (onClick) {\n      onClick(event, value);\n\n      if (event.defaultPrevented) {\n        return;\n      }\n    }\n\n    if (onChange) {\n      onChange(event, value);\n    }\n  };\n\n  return /*#__PURE__*/_jsx(ToggleButtonRoot, _extends({\n    className: clsx(classes.root, className),\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    ref: ref,\n    onClick: handleChange,\n    onChange: onChange,\n    value: value,\n    ownerState: ownerState,\n    \"aria-pressed\": selected\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ToggleButton.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the button when it is in an active state.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'standard'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['standard', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the button will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * Callback fired when the state changes.\n   *\n   * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.\n   * @param {any} value of the selected button.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the button is clicked.\n   *\n   * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.\n   * @param {any} value of the selected button.\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * If `true`, the button is rendered in an active state.\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * The prop defaults to the value inherited from the parent ToggleButtonGroup component.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value to associate with the button when selected in a\n   * ToggleButtonGroup.\n   */\n  value: PropTypes.any.isRequired\n} : void 0;\nexport default ToggleButton;","// Determine if the toggle button value matches, or is contained in, the\n// candidate group value.\nexport default function isValueSelected(value, candidate) {\n  if (candidate === undefined || value === undefined) {\n    return false;\n  }\n\n  if (Array.isArray(candidate)) {\n    return candidate.indexOf(value) >= 0;\n  }\n\n  return value === candidate;\n}","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getToggleButtonGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiToggleButtonGroup', slot);\n}\nconst toggleButtonGroupClasses = generateUtilityClasses('MuiToggleButtonGroup', ['root', 'selected', 'vertical', 'disabled', 'grouped', 'groupedHorizontal', 'groupedVertical']);\nexport default toggleButtonGroupClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"color\", \"disabled\", \"exclusive\", \"fullWidth\", \"onChange\", \"orientation\", \"size\", \"value\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport isValueSelected from './isValueSelected';\nimport toggleButtonGroupClasses, { getToggleButtonGroupUtilityClass } from './toggleButtonGroupClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    orientation,\n    fullWidth,\n    disabled\n  } = ownerState;\n  const slots = {\n    root: ['root', orientation === 'vertical' && 'vertical', fullWidth && 'fullWidth'],\n    grouped: ['grouped', `grouped${capitalize(orientation)}`, disabled && 'disabled']\n  };\n  return composeClasses(slots, getToggleButtonGroupUtilityClass, classes);\n};\n\nconst ToggleButtonGroupRoot = styled('div', {\n  name: 'MuiToggleButtonGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${toggleButtonGroupClasses.grouped}`]: styles.grouped\n    }, {\n      [`& .${toggleButtonGroupClasses.grouped}`]: styles[`grouped${capitalize(ownerState.orientation)}`]\n    }, styles.root, ownerState.orientation === 'vertical' && styles.vertical, ownerState.fullWidth && styles.fullWidth];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  display: 'inline-flex',\n  borderRadius: (theme.vars || theme).shape.borderRadius\n}, ownerState.orientation === 'vertical' && {\n  flexDirection: 'column'\n}, ownerState.fullWidth && {\n  width: '100%'\n}, {\n  [`& .${toggleButtonGroupClasses.grouped}`]: _extends({}, ownerState.orientation === 'horizontal' ? {\n    '&:not(:first-of-type)': {\n      marginLeft: -1,\n      borderLeft: '1px solid transparent',\n      borderTopLeftRadius: 0,\n      borderBottomLeftRadius: 0\n    },\n    '&:not(:last-of-type)': {\n      borderTopRightRadius: 0,\n      borderBottomRightRadius: 0\n    },\n    [`&.${toggleButtonGroupClasses.selected} + .${toggleButtonGroupClasses.grouped}.${toggleButtonGroupClasses.selected}`]: {\n      borderLeft: 0,\n      marginLeft: 0\n    }\n  } : {\n    '&:not(:first-of-type)': {\n      marginTop: -1,\n      borderTop: '1px solid transparent',\n      borderTopLeftRadius: 0,\n      borderTopRightRadius: 0\n    },\n    '&:not(:last-of-type)': {\n      borderBottomLeftRadius: 0,\n      borderBottomRightRadius: 0\n    },\n    [`&.${toggleButtonGroupClasses.selected} + .${toggleButtonGroupClasses.grouped}.${toggleButtonGroupClasses.selected}`]: {\n      borderTop: 0,\n      marginTop: 0\n    }\n  })\n}));\nconst ToggleButtonGroup = /*#__PURE__*/React.forwardRef(function ToggleButtonGroup(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiToggleButtonGroup'\n  });\n\n  const {\n    children,\n    className,\n    color = 'standard',\n    disabled = false,\n    exclusive = false,\n    fullWidth = false,\n    onChange,\n    orientation = 'horizontal',\n    size = 'medium',\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    disabled,\n    fullWidth,\n    orientation,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  const handleChange = (event, buttonValue) => {\n    if (!onChange) {\n      return;\n    }\n\n    const index = value && value.indexOf(buttonValue);\n    let newValue;\n\n    if (value && index >= 0) {\n      newValue = value.slice();\n      newValue.splice(index, 1);\n    } else {\n      newValue = value ? value.concat(buttonValue) : [buttonValue];\n    }\n\n    onChange(event, newValue);\n  };\n\n  const handleExclusiveChange = (event, buttonValue) => {\n    if (!onChange) {\n      return;\n    }\n\n    onChange(event, value === buttonValue ? null : buttonValue);\n  };\n\n  return /*#__PURE__*/_jsx(ToggleButtonGroupRoot, _extends({\n    role: \"group\",\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: React.Children.map(children, child => {\n      if (! /*#__PURE__*/React.isValidElement(child)) {\n        return null;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (isFragment(child)) {\n          console.error([\"MUI: The ToggleButtonGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n        }\n      }\n\n      return /*#__PURE__*/React.cloneElement(child, {\n        className: clsx(classes.grouped, child.props.className),\n        onChange: exclusive ? handleExclusiveChange : handleChange,\n        selected: child.props.selected === undefined ? isValueSelected(child.props.value, value) : child.props.selected,\n        size: child.props.size || size,\n        fullWidth,\n        color: child.props.color || color,\n        disabled: child.props.disabled || disabled\n      });\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ToggleButtonGroup.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the button when it is selected.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'standard'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['standard', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * If `true`, the component is disabled. This implies that all ToggleButton children will be disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, only allow one of the child ToggleButton values to be selected.\n   * @default false\n   */\n  exclusive: PropTypes.bool,\n\n  /**\n   * If `true`, the button group will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.\n   * @param {any} value of the selected buttons. When `exclusive` is true\n   * this is a single value; when false an array of selected values. If no value\n   * is selected and `exclusive` is true the value is null; when false an empty array.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The component orientation (layout flow direction).\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The currently selected value within the group or an array of selected\n   * values when `exclusive` is false.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default ToggleButtonGroup;"],"names":["reducer","combineReducers","uploads","upload","processFile","createAsyncThunk","fileData","dispatch","getState","console","log","axios","BASE_URL","API_VERSION3","headers","Authorization","TOKEN","response","data","uploadSlice","createSlice","name","initialState","enabled","reducers","resetUpload","newUpload","state","action","payload","prepare","event","setUpload","actions","selectUpload","uploadsApp","getUploads","getVariables","getUploadedFiles","uploadsAdapter","createEntityAdapter","getSelectors","selectUploads","selectAll","uploadsSlice","selectById","getInitialState","searchText","variables","setUploadsSearchText","target","value","extraReducers","fulfilled","setAll","selectUploadsSearchText","props","params","useDispatch","methods","useFormContext","formState","watch","getValues","theme","isValid","dirtyFields","useTheme","navigate","useNavigate","images","useState","msg","alert","openAlert","setAlert","preview","setPreview","uploadId","useParams","storage","getStorage","excel_file","useSelector","selectUser","handleSaveUpload","undefined","image","type","start_date","due_date","file_id","terms","user_id","file_name","url","fileRef","ref","uploadBytes","addFile","res","id","upLoadSingleImg","then","addUpload","result","Object","fromEntries","entries","filter","k","updateUpload","useEffect","reader","FileReader","addEventListener","readAsDataURL","className","motion","initial","x","opacity","animate","transition","delay","Typography","component","Link","role","to","color","FuseSvgIcon","size","direction","scale","width","src","variant","Button","disabled","onClick","removeUpload","Alert","severity","control","errors","_formValues","channel","gec","types","setTypes","Grid","container","padding","rowSpacing","columnSpacing","xs","sm","md","item","render","field","TextField","required","error","helperText","message","placeholder","autoFocus","fullWidth","textAlign","moment","format","ToggleButtonGroup","exclusive","onChange","newValue","handleChangeDest","ToggleButton","accept","e","file","files","multiline","rows","schema","yup","shape","test","withReducer","isMobile","useThemeMediaQuery","breakpoints","down","routeParams","noUpload","setnoUpload","useForm","mode","defaultValues","resolver","yupResolver","reset","form","location","useLocation","useDeepCompareEffect","updateUploadState","_","FuseLoading","FusePageCarded","header","content","scroll","getDay","date","Date","year","getFullYear","month","getMonth","getDate","join","upLoadImg","Promise","all","map","img_item","today","imageRef","getDownloadURL","formatFileSize","bytes","decimalPoint","dm","i","Math","floor","parseFloat","pow","toFixed","getToggleButtonUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","ToggleButtonRoot","styled","ButtonBase","overridesResolver","styles","ownerState","root","capitalize","selectedColorChannel","selectedColor","palette","text","primary","main","vars","primaryChannel","mainChannel","_extends","typography","button","borderRadius","border","divider","active","toggleButtonClasses","disabledBackground","textDecoration","backgroundColor","hoverOpacity","alpha","selectedOpacity","fontSize","pxToRem","React","inProps","useThemeProps","children","disableFocusRipple","selected","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","focusRipple","defaultPrevented","isValueSelected","candidate","Array","isArray","indexOf","getToggleButtonGroupUtilityClass","ToggleButtonGroupRoot","toggleButtonGroupClasses","grouped","orientation","vertical","display","flexDirection","marginLeft","borderLeft","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","marginTop","borderTop","handleChange","buttonValue","index","slice","splice","concat","handleExclusiveChange","child"],"sourceRoot":""}