{"version":3,"file":"static/js/9529.55197b7c.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/ToggleButton/toggleButtonClasses.js","../node_modules/@mui/material/ToggleButton/ToggleButton.js","../node_modules/@mui/material/ToggleButtonGroup/isValueSelected.js","../node_modules/@mui/material/ToggleButtonGroup/toggleButtonGroupClasses.js","../node_modules/@mui/material/ToggleButtonGroup/ToggleButtonGroup.js","../node_modules/qrcode.react/lib/esm/index.js"],"sourcesContent":["import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getToggleButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiToggleButton', slot);\n}\nconst toggleButtonClasses = generateUtilityClasses('MuiToggleButton', ['root', 'disabled', 'selected', 'standard', 'primary', 'secondary', 'sizeSmall', 'sizeMedium', 'sizeLarge']);\nexport default toggleButtonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"color\", \"disabled\", \"disableFocusRipple\", \"fullWidth\", \"onChange\", \"onClick\", \"selected\", \"size\", \"value\"];\n// @inheritedComponent ButtonBase\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '../styles';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport toggleButtonClasses, { getToggleButtonUtilityClass } from './toggleButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    fullWidth,\n    selected,\n    disabled,\n    size,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', selected && 'selected', disabled && 'disabled', fullWidth && 'fullWidth', `size${capitalize(size)}`, color]\n  };\n  return composeClasses(slots, getToggleButtonUtilityClass, classes);\n};\n\nconst ToggleButtonRoot = styled(ButtonBase, {\n  name: 'MuiToggleButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`size${capitalize(ownerState.size)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  let selectedColor = ownerState.color === 'standard' ? theme.palette.text.primary : theme.palette[ownerState.color].main;\n  let selectedColorChannel;\n\n  if (theme.vars) {\n    selectedColor = ownerState.color === 'standard' ? theme.vars.palette.text.primary : theme.vars.palette[ownerState.color].main;\n    selectedColorChannel = ownerState.color === 'standard' ? theme.vars.palette.text.primaryChannel : theme.vars.palette[ownerState.color].mainChannel;\n  }\n\n  return _extends({}, theme.typography.button, {\n    borderRadius: (theme.vars || theme).shape.borderRadius,\n    padding: 11,\n    border: `1px solid ${(theme.vars || theme).palette.divider}`,\n    color: (theme.vars || theme).palette.action.active\n  }, ownerState.fullWidth && {\n    width: '100%'\n  }, {\n    [`&.${toggleButtonClasses.disabled}`]: {\n      color: (theme.vars || theme).palette.action.disabled,\n      border: `1px solid ${(theme.vars || theme).palette.action.disabledBackground}`\n    },\n    '&:hover': {\n      textDecoration: 'none',\n      // Reset on mouse devices\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.text.primaryChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    [`&.${toggleButtonClasses.selected}`]: {\n      color: selectedColor,\n      backgroundColor: theme.vars ? `rgba(${selectedColorChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(selectedColor, theme.palette.action.selectedOpacity),\n      '&:hover': {\n        backgroundColor: theme.vars ? `rgba(${selectedColorChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(selectedColor, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.vars ? `rgba(${selectedColorChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(selectedColor, theme.palette.action.selectedOpacity)\n        }\n      }\n    }\n  }, ownerState.size === 'small' && {\n    padding: 7,\n    fontSize: theme.typography.pxToRem(13)\n  }, ownerState.size === 'large' && {\n    padding: 15,\n    fontSize: theme.typography.pxToRem(15)\n  });\n});\nconst ToggleButton = /*#__PURE__*/React.forwardRef(function ToggleButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiToggleButton'\n  });\n\n  const {\n    children,\n    className,\n    color = 'standard',\n    disabled = false,\n    disableFocusRipple = false,\n    fullWidth = false,\n    onChange,\n    onClick,\n    selected,\n    size = 'medium',\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    disabled,\n    disableFocusRipple,\n    fullWidth,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  const handleChange = event => {\n    if (onClick) {\n      onClick(event, value);\n\n      if (event.defaultPrevented) {\n        return;\n      }\n    }\n\n    if (onChange) {\n      onChange(event, value);\n    }\n  };\n\n  return /*#__PURE__*/_jsx(ToggleButtonRoot, _extends({\n    className: clsx(classes.root, className),\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    ref: ref,\n    onClick: handleChange,\n    onChange: onChange,\n    value: value,\n    ownerState: ownerState,\n    \"aria-pressed\": selected\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ToggleButton.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the button when it is in an active state.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'standard'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['standard', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the button will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * Callback fired when the state changes.\n   *\n   * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.\n   * @param {any} value of the selected button.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the button is clicked.\n   *\n   * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.\n   * @param {any} value of the selected button.\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * If `true`, the button is rendered in an active state.\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * The prop defaults to the value inherited from the parent ToggleButtonGroup component.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value to associate with the button when selected in a\n   * ToggleButtonGroup.\n   */\n  value: PropTypes.any.isRequired\n} : void 0;\nexport default ToggleButton;","// Determine if the toggle button value matches, or is contained in, the\n// candidate group value.\nexport default function isValueSelected(value, candidate) {\n  if (candidate === undefined || value === undefined) {\n    return false;\n  }\n\n  if (Array.isArray(candidate)) {\n    return candidate.indexOf(value) >= 0;\n  }\n\n  return value === candidate;\n}","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getToggleButtonGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiToggleButtonGroup', slot);\n}\nconst toggleButtonGroupClasses = generateUtilityClasses('MuiToggleButtonGroup', ['root', 'selected', 'vertical', 'disabled', 'grouped', 'groupedHorizontal', 'groupedVertical']);\nexport default toggleButtonGroupClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"color\", \"disabled\", \"exclusive\", \"fullWidth\", \"onChange\", \"orientation\", \"size\", \"value\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport isValueSelected from './isValueSelected';\nimport toggleButtonGroupClasses, { getToggleButtonGroupUtilityClass } from './toggleButtonGroupClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    orientation,\n    fullWidth,\n    disabled\n  } = ownerState;\n  const slots = {\n    root: ['root', orientation === 'vertical' && 'vertical', fullWidth && 'fullWidth'],\n    grouped: ['grouped', `grouped${capitalize(orientation)}`, disabled && 'disabled']\n  };\n  return composeClasses(slots, getToggleButtonGroupUtilityClass, classes);\n};\n\nconst ToggleButtonGroupRoot = styled('div', {\n  name: 'MuiToggleButtonGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${toggleButtonGroupClasses.grouped}`]: styles.grouped\n    }, {\n      [`& .${toggleButtonGroupClasses.grouped}`]: styles[`grouped${capitalize(ownerState.orientation)}`]\n    }, styles.root, ownerState.orientation === 'vertical' && styles.vertical, ownerState.fullWidth && styles.fullWidth];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  display: 'inline-flex',\n  borderRadius: (theme.vars || theme).shape.borderRadius\n}, ownerState.orientation === 'vertical' && {\n  flexDirection: 'column'\n}, ownerState.fullWidth && {\n  width: '100%'\n}, {\n  [`& .${toggleButtonGroupClasses.grouped}`]: _extends({}, ownerState.orientation === 'horizontal' ? {\n    '&:not(:first-of-type)': {\n      marginLeft: -1,\n      borderLeft: '1px solid transparent',\n      borderTopLeftRadius: 0,\n      borderBottomLeftRadius: 0\n    },\n    '&:not(:last-of-type)': {\n      borderTopRightRadius: 0,\n      borderBottomRightRadius: 0\n    },\n    [`&.${toggleButtonGroupClasses.selected} + .${toggleButtonGroupClasses.grouped}.${toggleButtonGroupClasses.selected}`]: {\n      borderLeft: 0,\n      marginLeft: 0\n    }\n  } : {\n    '&:not(:first-of-type)': {\n      marginTop: -1,\n      borderTop: '1px solid transparent',\n      borderTopLeftRadius: 0,\n      borderTopRightRadius: 0\n    },\n    '&:not(:last-of-type)': {\n      borderBottomLeftRadius: 0,\n      borderBottomRightRadius: 0\n    },\n    [`&.${toggleButtonGroupClasses.selected} + .${toggleButtonGroupClasses.grouped}.${toggleButtonGroupClasses.selected}`]: {\n      borderTop: 0,\n      marginTop: 0\n    }\n  })\n}));\nconst ToggleButtonGroup = /*#__PURE__*/React.forwardRef(function ToggleButtonGroup(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiToggleButtonGroup'\n  });\n\n  const {\n    children,\n    className,\n    color = 'standard',\n    disabled = false,\n    exclusive = false,\n    fullWidth = false,\n    onChange,\n    orientation = 'horizontal',\n    size = 'medium',\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    disabled,\n    fullWidth,\n    orientation,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  const handleChange = (event, buttonValue) => {\n    if (!onChange) {\n      return;\n    }\n\n    const index = value && value.indexOf(buttonValue);\n    let newValue;\n\n    if (value && index >= 0) {\n      newValue = value.slice();\n      newValue.splice(index, 1);\n    } else {\n      newValue = value ? value.concat(buttonValue) : [buttonValue];\n    }\n\n    onChange(event, newValue);\n  };\n\n  const handleExclusiveChange = (event, buttonValue) => {\n    if (!onChange) {\n      return;\n    }\n\n    onChange(event, value === buttonValue ? null : buttonValue);\n  };\n\n  return /*#__PURE__*/_jsx(ToggleButtonGroupRoot, _extends({\n    role: \"group\",\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: React.Children.map(children, child => {\n      if (! /*#__PURE__*/React.isValidElement(child)) {\n        return null;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (isFragment(child)) {\n          console.error([\"MUI: The ToggleButtonGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n        }\n      }\n\n      return /*#__PURE__*/React.cloneElement(child, {\n        className: clsx(classes.grouped, child.props.className),\n        onChange: exclusive ? handleExclusiveChange : handleChange,\n        selected: child.props.selected === undefined ? isValueSelected(child.props.value, value) : child.props.selected,\n        size: child.props.size || size,\n        fullWidth,\n        color: child.props.color || color,\n        disabled: child.props.disabled || disabled\n      });\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ToggleButtonGroup.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the button when it is selected.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'standard'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['standard', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * If `true`, the component is disabled. This implies that all ToggleButton children will be disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, only allow one of the child ToggleButton values to be selected.\n   * @default false\n   */\n  exclusive: PropTypes.bool,\n\n  /**\n   * If `true`, the button group will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.\n   * @param {any} value of the selected buttons. When `exclusive` is true\n   * this is a single value; when false an array of selected values. If no value\n   * is selected and `exclusive` is true the value is null; when false an empty array.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The component orientation (layout flow direction).\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The currently selected value within the group or an array of selected\n   * values when `exclusive` is false.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default ToggleButtonGroup;","var __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\n\n// src/index.tsx\nimport React, { useRef, useEffect, useState } from \"react\";\n\n// src/third-party/qrcodegen/index.ts\n/**\n * @license QR Code generator library (TypeScript)\n * Copyright (c) Project Nayuki.\n * SPDX-License-Identifier: MIT\n */\nvar qrcodegen;\n((qrcodegen2) => {\n  const _QrCode = class {\n    constructor(version, errorCorrectionLevel, dataCodewords, msk) {\n      this.version = version;\n      this.errorCorrectionLevel = errorCorrectionLevel;\n      this.modules = [];\n      this.isFunction = [];\n      if (version < _QrCode.MIN_VERSION || version > _QrCode.MAX_VERSION)\n        throw new RangeError(\"Version value out of range\");\n      if (msk < -1 || msk > 7)\n        throw new RangeError(\"Mask value out of range\");\n      this.size = version * 4 + 17;\n      let row = [];\n      for (let i = 0; i < this.size; i++)\n        row.push(false);\n      for (let i = 0; i < this.size; i++) {\n        this.modules.push(row.slice());\n        this.isFunction.push(row.slice());\n      }\n      this.drawFunctionPatterns();\n      const allCodewords = this.addEccAndInterleave(dataCodewords);\n      this.drawCodewords(allCodewords);\n      if (msk == -1) {\n        let minPenalty = 1e9;\n        for (let i = 0; i < 8; i++) {\n          this.applyMask(i);\n          this.drawFormatBits(i);\n          const penalty = this.getPenaltyScore();\n          if (penalty < minPenalty) {\n            msk = i;\n            minPenalty = penalty;\n          }\n          this.applyMask(i);\n        }\n      }\n      assert(0 <= msk && msk <= 7);\n      this.mask = msk;\n      this.applyMask(msk);\n      this.drawFormatBits(msk);\n      this.isFunction = [];\n    }\n    static encodeText(text, ecl) {\n      const segs = qrcodegen2.QrSegment.makeSegments(text);\n      return _QrCode.encodeSegments(segs, ecl);\n    }\n    static encodeBinary(data, ecl) {\n      const seg = qrcodegen2.QrSegment.makeBytes(data);\n      return _QrCode.encodeSegments([seg], ecl);\n    }\n    static encodeSegments(segs, ecl, minVersion = 1, maxVersion = 40, mask = -1, boostEcl = true) {\n      if (!(_QrCode.MIN_VERSION <= minVersion && minVersion <= maxVersion && maxVersion <= _QrCode.MAX_VERSION) || mask < -1 || mask > 7)\n        throw new RangeError(\"Invalid value\");\n      let version;\n      let dataUsedBits;\n      for (version = minVersion; ; version++) {\n        const dataCapacityBits2 = _QrCode.getNumDataCodewords(version, ecl) * 8;\n        const usedBits = QrSegment.getTotalBits(segs, version);\n        if (usedBits <= dataCapacityBits2) {\n          dataUsedBits = usedBits;\n          break;\n        }\n        if (version >= maxVersion)\n          throw new RangeError(\"Data too long\");\n      }\n      for (const newEcl of [_QrCode.Ecc.MEDIUM, _QrCode.Ecc.QUARTILE, _QrCode.Ecc.HIGH]) {\n        if (boostEcl && dataUsedBits <= _QrCode.getNumDataCodewords(version, newEcl) * 8)\n          ecl = newEcl;\n      }\n      let bb = [];\n      for (const seg of segs) {\n        appendBits(seg.mode.modeBits, 4, bb);\n        appendBits(seg.numChars, seg.mode.numCharCountBits(version), bb);\n        for (const b of seg.getData())\n          bb.push(b);\n      }\n      assert(bb.length == dataUsedBits);\n      const dataCapacityBits = _QrCode.getNumDataCodewords(version, ecl) * 8;\n      assert(bb.length <= dataCapacityBits);\n      appendBits(0, Math.min(4, dataCapacityBits - bb.length), bb);\n      appendBits(0, (8 - bb.length % 8) % 8, bb);\n      assert(bb.length % 8 == 0);\n      for (let padByte = 236; bb.length < dataCapacityBits; padByte ^= 236 ^ 17)\n        appendBits(padByte, 8, bb);\n      let dataCodewords = [];\n      while (dataCodewords.length * 8 < bb.length)\n        dataCodewords.push(0);\n      bb.forEach((b, i) => dataCodewords[i >>> 3] |= b << 7 - (i & 7));\n      return new _QrCode(version, ecl, dataCodewords, mask);\n    }\n    getModule(x, y) {\n      return 0 <= x && x < this.size && 0 <= y && y < this.size && this.modules[y][x];\n    }\n    getModules() {\n      return this.modules;\n    }\n    drawFunctionPatterns() {\n      for (let i = 0; i < this.size; i++) {\n        this.setFunctionModule(6, i, i % 2 == 0);\n        this.setFunctionModule(i, 6, i % 2 == 0);\n      }\n      this.drawFinderPattern(3, 3);\n      this.drawFinderPattern(this.size - 4, 3);\n      this.drawFinderPattern(3, this.size - 4);\n      const alignPatPos = this.getAlignmentPatternPositions();\n      const numAlign = alignPatPos.length;\n      for (let i = 0; i < numAlign; i++) {\n        for (let j = 0; j < numAlign; j++) {\n          if (!(i == 0 && j == 0 || i == 0 && j == numAlign - 1 || i == numAlign - 1 && j == 0))\n            this.drawAlignmentPattern(alignPatPos[i], alignPatPos[j]);\n        }\n      }\n      this.drawFormatBits(0);\n      this.drawVersion();\n    }\n    drawFormatBits(mask) {\n      const data = this.errorCorrectionLevel.formatBits << 3 | mask;\n      let rem = data;\n      for (let i = 0; i < 10; i++)\n        rem = rem << 1 ^ (rem >>> 9) * 1335;\n      const bits = (data << 10 | rem) ^ 21522;\n      assert(bits >>> 15 == 0);\n      for (let i = 0; i <= 5; i++)\n        this.setFunctionModule(8, i, getBit(bits, i));\n      this.setFunctionModule(8, 7, getBit(bits, 6));\n      this.setFunctionModule(8, 8, getBit(bits, 7));\n      this.setFunctionModule(7, 8, getBit(bits, 8));\n      for (let i = 9; i < 15; i++)\n        this.setFunctionModule(14 - i, 8, getBit(bits, i));\n      for (let i = 0; i < 8; i++)\n        this.setFunctionModule(this.size - 1 - i, 8, getBit(bits, i));\n      for (let i = 8; i < 15; i++)\n        this.setFunctionModule(8, this.size - 15 + i, getBit(bits, i));\n      this.setFunctionModule(8, this.size - 8, true);\n    }\n    drawVersion() {\n      if (this.version < 7)\n        return;\n      let rem = this.version;\n      for (let i = 0; i < 12; i++)\n        rem = rem << 1 ^ (rem >>> 11) * 7973;\n      const bits = this.version << 12 | rem;\n      assert(bits >>> 18 == 0);\n      for (let i = 0; i < 18; i++) {\n        const color = getBit(bits, i);\n        const a = this.size - 11 + i % 3;\n        const b = Math.floor(i / 3);\n        this.setFunctionModule(a, b, color);\n        this.setFunctionModule(b, a, color);\n      }\n    }\n    drawFinderPattern(x, y) {\n      for (let dy = -4; dy <= 4; dy++) {\n        for (let dx = -4; dx <= 4; dx++) {\n          const dist = Math.max(Math.abs(dx), Math.abs(dy));\n          const xx = x + dx;\n          const yy = y + dy;\n          if (0 <= xx && xx < this.size && 0 <= yy && yy < this.size)\n            this.setFunctionModule(xx, yy, dist != 2 && dist != 4);\n        }\n      }\n    }\n    drawAlignmentPattern(x, y) {\n      for (let dy = -2; dy <= 2; dy++) {\n        for (let dx = -2; dx <= 2; dx++)\n          this.setFunctionModule(x + dx, y + dy, Math.max(Math.abs(dx), Math.abs(dy)) != 1);\n      }\n    }\n    setFunctionModule(x, y, isDark) {\n      this.modules[y][x] = isDark;\n      this.isFunction[y][x] = true;\n    }\n    addEccAndInterleave(data) {\n      const ver = this.version;\n      const ecl = this.errorCorrectionLevel;\n      if (data.length != _QrCode.getNumDataCodewords(ver, ecl))\n        throw new RangeError(\"Invalid argument\");\n      const numBlocks = _QrCode.NUM_ERROR_CORRECTION_BLOCKS[ecl.ordinal][ver];\n      const blockEccLen = _QrCode.ECC_CODEWORDS_PER_BLOCK[ecl.ordinal][ver];\n      const rawCodewords = Math.floor(_QrCode.getNumRawDataModules(ver) / 8);\n      const numShortBlocks = numBlocks - rawCodewords % numBlocks;\n      const shortBlockLen = Math.floor(rawCodewords / numBlocks);\n      let blocks = [];\n      const rsDiv = _QrCode.reedSolomonComputeDivisor(blockEccLen);\n      for (let i = 0, k = 0; i < numBlocks; i++) {\n        let dat = data.slice(k, k + shortBlockLen - blockEccLen + (i < numShortBlocks ? 0 : 1));\n        k += dat.length;\n        const ecc = _QrCode.reedSolomonComputeRemainder(dat, rsDiv);\n        if (i < numShortBlocks)\n          dat.push(0);\n        blocks.push(dat.concat(ecc));\n      }\n      let result = [];\n      for (let i = 0; i < blocks[0].length; i++) {\n        blocks.forEach((block, j) => {\n          if (i != shortBlockLen - blockEccLen || j >= numShortBlocks)\n            result.push(block[i]);\n        });\n      }\n      assert(result.length == rawCodewords);\n      return result;\n    }\n    drawCodewords(data) {\n      if (data.length != Math.floor(_QrCode.getNumRawDataModules(this.version) / 8))\n        throw new RangeError(\"Invalid argument\");\n      let i = 0;\n      for (let right = this.size - 1; right >= 1; right -= 2) {\n        if (right == 6)\n          right = 5;\n        for (let vert = 0; vert < this.size; vert++) {\n          for (let j = 0; j < 2; j++) {\n            const x = right - j;\n            const upward = (right + 1 & 2) == 0;\n            const y = upward ? this.size - 1 - vert : vert;\n            if (!this.isFunction[y][x] && i < data.length * 8) {\n              this.modules[y][x] = getBit(data[i >>> 3], 7 - (i & 7));\n              i++;\n            }\n          }\n        }\n      }\n      assert(i == data.length * 8);\n    }\n    applyMask(mask) {\n      if (mask < 0 || mask > 7)\n        throw new RangeError(\"Mask value out of range\");\n      for (let y = 0; y < this.size; y++) {\n        for (let x = 0; x < this.size; x++) {\n          let invert;\n          switch (mask) {\n            case 0:\n              invert = (x + y) % 2 == 0;\n              break;\n            case 1:\n              invert = y % 2 == 0;\n              break;\n            case 2:\n              invert = x % 3 == 0;\n              break;\n            case 3:\n              invert = (x + y) % 3 == 0;\n              break;\n            case 4:\n              invert = (Math.floor(x / 3) + Math.floor(y / 2)) % 2 == 0;\n              break;\n            case 5:\n              invert = x * y % 2 + x * y % 3 == 0;\n              break;\n            case 6:\n              invert = (x * y % 2 + x * y % 3) % 2 == 0;\n              break;\n            case 7:\n              invert = ((x + y) % 2 + x * y % 3) % 2 == 0;\n              break;\n            default:\n              throw new Error(\"Unreachable\");\n          }\n          if (!this.isFunction[y][x] && invert)\n            this.modules[y][x] = !this.modules[y][x];\n        }\n      }\n    }\n    getPenaltyScore() {\n      let result = 0;\n      for (let y = 0; y < this.size; y++) {\n        let runColor = false;\n        let runX = 0;\n        let runHistory = [0, 0, 0, 0, 0, 0, 0];\n        for (let x = 0; x < this.size; x++) {\n          if (this.modules[y][x] == runColor) {\n            runX++;\n            if (runX == 5)\n              result += _QrCode.PENALTY_N1;\n            else if (runX > 5)\n              result++;\n          } else {\n            this.finderPenaltyAddHistory(runX, runHistory);\n            if (!runColor)\n              result += this.finderPenaltyCountPatterns(runHistory) * _QrCode.PENALTY_N3;\n            runColor = this.modules[y][x];\n            runX = 1;\n          }\n        }\n        result += this.finderPenaltyTerminateAndCount(runColor, runX, runHistory) * _QrCode.PENALTY_N3;\n      }\n      for (let x = 0; x < this.size; x++) {\n        let runColor = false;\n        let runY = 0;\n        let runHistory = [0, 0, 0, 0, 0, 0, 0];\n        for (let y = 0; y < this.size; y++) {\n          if (this.modules[y][x] == runColor) {\n            runY++;\n            if (runY == 5)\n              result += _QrCode.PENALTY_N1;\n            else if (runY > 5)\n              result++;\n          } else {\n            this.finderPenaltyAddHistory(runY, runHistory);\n            if (!runColor)\n              result += this.finderPenaltyCountPatterns(runHistory) * _QrCode.PENALTY_N3;\n            runColor = this.modules[y][x];\n            runY = 1;\n          }\n        }\n        result += this.finderPenaltyTerminateAndCount(runColor, runY, runHistory) * _QrCode.PENALTY_N3;\n      }\n      for (let y = 0; y < this.size - 1; y++) {\n        for (let x = 0; x < this.size - 1; x++) {\n          const color = this.modules[y][x];\n          if (color == this.modules[y][x + 1] && color == this.modules[y + 1][x] && color == this.modules[y + 1][x + 1])\n            result += _QrCode.PENALTY_N2;\n        }\n      }\n      let dark = 0;\n      for (const row of this.modules)\n        dark = row.reduce((sum, color) => sum + (color ? 1 : 0), dark);\n      const total = this.size * this.size;\n      const k = Math.ceil(Math.abs(dark * 20 - total * 10) / total) - 1;\n      assert(0 <= k && k <= 9);\n      result += k * _QrCode.PENALTY_N4;\n      assert(0 <= result && result <= 2568888);\n      return result;\n    }\n    getAlignmentPatternPositions() {\n      if (this.version == 1)\n        return [];\n      else {\n        const numAlign = Math.floor(this.version / 7) + 2;\n        const step = this.version == 32 ? 26 : Math.ceil((this.version * 4 + 4) / (numAlign * 2 - 2)) * 2;\n        let result = [6];\n        for (let pos = this.size - 7; result.length < numAlign; pos -= step)\n          result.splice(1, 0, pos);\n        return result;\n      }\n    }\n    static getNumRawDataModules(ver) {\n      if (ver < _QrCode.MIN_VERSION || ver > _QrCode.MAX_VERSION)\n        throw new RangeError(\"Version number out of range\");\n      let result = (16 * ver + 128) * ver + 64;\n      if (ver >= 2) {\n        const numAlign = Math.floor(ver / 7) + 2;\n        result -= (25 * numAlign - 10) * numAlign - 55;\n        if (ver >= 7)\n          result -= 36;\n      }\n      assert(208 <= result && result <= 29648);\n      return result;\n    }\n    static getNumDataCodewords(ver, ecl) {\n      return Math.floor(_QrCode.getNumRawDataModules(ver) / 8) - _QrCode.ECC_CODEWORDS_PER_BLOCK[ecl.ordinal][ver] * _QrCode.NUM_ERROR_CORRECTION_BLOCKS[ecl.ordinal][ver];\n    }\n    static reedSolomonComputeDivisor(degree) {\n      if (degree < 1 || degree > 255)\n        throw new RangeError(\"Degree out of range\");\n      let result = [];\n      for (let i = 0; i < degree - 1; i++)\n        result.push(0);\n      result.push(1);\n      let root = 1;\n      for (let i = 0; i < degree; i++) {\n        for (let j = 0; j < result.length; j++) {\n          result[j] = _QrCode.reedSolomonMultiply(result[j], root);\n          if (j + 1 < result.length)\n            result[j] ^= result[j + 1];\n        }\n        root = _QrCode.reedSolomonMultiply(root, 2);\n      }\n      return result;\n    }\n    static reedSolomonComputeRemainder(data, divisor) {\n      let result = divisor.map((_) => 0);\n      for (const b of data) {\n        const factor = b ^ result.shift();\n        result.push(0);\n        divisor.forEach((coef, i) => result[i] ^= _QrCode.reedSolomonMultiply(coef, factor));\n      }\n      return result;\n    }\n    static reedSolomonMultiply(x, y) {\n      if (x >>> 8 != 0 || y >>> 8 != 0)\n        throw new RangeError(\"Byte out of range\");\n      let z = 0;\n      for (let i = 7; i >= 0; i--) {\n        z = z << 1 ^ (z >>> 7) * 285;\n        z ^= (y >>> i & 1) * x;\n      }\n      assert(z >>> 8 == 0);\n      return z;\n    }\n    finderPenaltyCountPatterns(runHistory) {\n      const n = runHistory[1];\n      assert(n <= this.size * 3);\n      const core = n > 0 && runHistory[2] == n && runHistory[3] == n * 3 && runHistory[4] == n && runHistory[5] == n;\n      return (core && runHistory[0] >= n * 4 && runHistory[6] >= n ? 1 : 0) + (core && runHistory[6] >= n * 4 && runHistory[0] >= n ? 1 : 0);\n    }\n    finderPenaltyTerminateAndCount(currentRunColor, currentRunLength, runHistory) {\n      if (currentRunColor) {\n        this.finderPenaltyAddHistory(currentRunLength, runHistory);\n        currentRunLength = 0;\n      }\n      currentRunLength += this.size;\n      this.finderPenaltyAddHistory(currentRunLength, runHistory);\n      return this.finderPenaltyCountPatterns(runHistory);\n    }\n    finderPenaltyAddHistory(currentRunLength, runHistory) {\n      if (runHistory[0] == 0)\n        currentRunLength += this.size;\n      runHistory.pop();\n      runHistory.unshift(currentRunLength);\n    }\n  };\n  let QrCode = _QrCode;\n  QrCode.MIN_VERSION = 1;\n  QrCode.MAX_VERSION = 40;\n  QrCode.PENALTY_N1 = 3;\n  QrCode.PENALTY_N2 = 3;\n  QrCode.PENALTY_N3 = 40;\n  QrCode.PENALTY_N4 = 10;\n  QrCode.ECC_CODEWORDS_PER_BLOCK = [\n    [-1, 7, 10, 15, 20, 26, 18, 20, 24, 30, 18, 20, 24, 26, 30, 22, 24, 28, 30, 28, 28, 28, 28, 30, 30, 26, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30],\n    [-1, 10, 16, 26, 18, 24, 16, 18, 22, 22, 26, 30, 22, 22, 24, 24, 28, 28, 26, 26, 26, 26, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28],\n    [-1, 13, 22, 18, 26, 18, 24, 18, 22, 20, 24, 28, 26, 24, 20, 30, 24, 28, 28, 26, 30, 28, 30, 30, 30, 30, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30],\n    [-1, 17, 28, 22, 16, 22, 28, 26, 26, 24, 28, 24, 28, 22, 24, 24, 30, 28, 28, 26, 28, 30, 24, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30]\n  ];\n  QrCode.NUM_ERROR_CORRECTION_BLOCKS = [\n    [-1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 4, 4, 4, 4, 4, 6, 6, 6, 6, 7, 8, 8, 9, 9, 10, 12, 12, 12, 13, 14, 15, 16, 17, 18, 19, 19, 20, 21, 22, 24, 25],\n    [-1, 1, 1, 1, 2, 2, 4, 4, 4, 5, 5, 5, 8, 9, 9, 10, 10, 11, 13, 14, 16, 17, 17, 18, 20, 21, 23, 25, 26, 28, 29, 31, 33, 35, 37, 38, 40, 43, 45, 47, 49],\n    [-1, 1, 1, 2, 2, 4, 4, 6, 6, 8, 8, 8, 10, 12, 16, 12, 17, 16, 18, 21, 20, 23, 23, 25, 27, 29, 34, 34, 35, 38, 40, 43, 45, 48, 51, 53, 56, 59, 62, 65, 68],\n    [-1, 1, 1, 2, 4, 4, 4, 5, 6, 8, 8, 11, 11, 16, 16, 18, 16, 19, 21, 25, 25, 25, 34, 30, 32, 35, 37, 40, 42, 45, 48, 51, 54, 57, 60, 63, 66, 70, 74, 77, 81]\n  ];\n  qrcodegen2.QrCode = QrCode;\n  function appendBits(val, len, bb) {\n    if (len < 0 || len > 31 || val >>> len != 0)\n      throw new RangeError(\"Value out of range\");\n    for (let i = len - 1; i >= 0; i--)\n      bb.push(val >>> i & 1);\n  }\n  function getBit(x, i) {\n    return (x >>> i & 1) != 0;\n  }\n  function assert(cond) {\n    if (!cond)\n      throw new Error(\"Assertion error\");\n  }\n  const _QrSegment = class {\n    constructor(mode, numChars, bitData) {\n      this.mode = mode;\n      this.numChars = numChars;\n      this.bitData = bitData;\n      if (numChars < 0)\n        throw new RangeError(\"Invalid argument\");\n      this.bitData = bitData.slice();\n    }\n    static makeBytes(data) {\n      let bb = [];\n      for (const b of data)\n        appendBits(b, 8, bb);\n      return new _QrSegment(_QrSegment.Mode.BYTE, data.length, bb);\n    }\n    static makeNumeric(digits) {\n      if (!_QrSegment.isNumeric(digits))\n        throw new RangeError(\"String contains non-numeric characters\");\n      let bb = [];\n      for (let i = 0; i < digits.length; ) {\n        const n = Math.min(digits.length - i, 3);\n        appendBits(parseInt(digits.substr(i, n), 10), n * 3 + 1, bb);\n        i += n;\n      }\n      return new _QrSegment(_QrSegment.Mode.NUMERIC, digits.length, bb);\n    }\n    static makeAlphanumeric(text) {\n      if (!_QrSegment.isAlphanumeric(text))\n        throw new RangeError(\"String contains unencodable characters in alphanumeric mode\");\n      let bb = [];\n      let i;\n      for (i = 0; i + 2 <= text.length; i += 2) {\n        let temp = _QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i)) * 45;\n        temp += _QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i + 1));\n        appendBits(temp, 11, bb);\n      }\n      if (i < text.length)\n        appendBits(_QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i)), 6, bb);\n      return new _QrSegment(_QrSegment.Mode.ALPHANUMERIC, text.length, bb);\n    }\n    static makeSegments(text) {\n      if (text == \"\")\n        return [];\n      else if (_QrSegment.isNumeric(text))\n        return [_QrSegment.makeNumeric(text)];\n      else if (_QrSegment.isAlphanumeric(text))\n        return [_QrSegment.makeAlphanumeric(text)];\n      else\n        return [_QrSegment.makeBytes(_QrSegment.toUtf8ByteArray(text))];\n    }\n    static makeEci(assignVal) {\n      let bb = [];\n      if (assignVal < 0)\n        throw new RangeError(\"ECI assignment value out of range\");\n      else if (assignVal < 1 << 7)\n        appendBits(assignVal, 8, bb);\n      else if (assignVal < 1 << 14) {\n        appendBits(2, 2, bb);\n        appendBits(assignVal, 14, bb);\n      } else if (assignVal < 1e6) {\n        appendBits(6, 3, bb);\n        appendBits(assignVal, 21, bb);\n      } else\n        throw new RangeError(\"ECI assignment value out of range\");\n      return new _QrSegment(_QrSegment.Mode.ECI, 0, bb);\n    }\n    static isNumeric(text) {\n      return _QrSegment.NUMERIC_REGEX.test(text);\n    }\n    static isAlphanumeric(text) {\n      return _QrSegment.ALPHANUMERIC_REGEX.test(text);\n    }\n    getData() {\n      return this.bitData.slice();\n    }\n    static getTotalBits(segs, version) {\n      let result = 0;\n      for (const seg of segs) {\n        const ccbits = seg.mode.numCharCountBits(version);\n        if (seg.numChars >= 1 << ccbits)\n          return Infinity;\n        result += 4 + ccbits + seg.bitData.length;\n      }\n      return result;\n    }\n    static toUtf8ByteArray(str) {\n      str = encodeURI(str);\n      let result = [];\n      for (let i = 0; i < str.length; i++) {\n        if (str.charAt(i) != \"%\")\n          result.push(str.charCodeAt(i));\n        else {\n          result.push(parseInt(str.substr(i + 1, 2), 16));\n          i += 2;\n        }\n      }\n      return result;\n    }\n  };\n  let QrSegment = _QrSegment;\n  QrSegment.NUMERIC_REGEX = /^[0-9]*$/;\n  QrSegment.ALPHANUMERIC_REGEX = /^[A-Z0-9 $%*+.\\/:-]*$/;\n  QrSegment.ALPHANUMERIC_CHARSET = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:\";\n  qrcodegen2.QrSegment = QrSegment;\n})(qrcodegen || (qrcodegen = {}));\n((qrcodegen2) => {\n  let QrCode;\n  ((QrCode2) => {\n    const _Ecc = class {\n      constructor(ordinal, formatBits) {\n        this.ordinal = ordinal;\n        this.formatBits = formatBits;\n      }\n    };\n    let Ecc = _Ecc;\n    Ecc.LOW = new _Ecc(0, 1);\n    Ecc.MEDIUM = new _Ecc(1, 0);\n    Ecc.QUARTILE = new _Ecc(2, 3);\n    Ecc.HIGH = new _Ecc(3, 2);\n    QrCode2.Ecc = Ecc;\n  })(QrCode = qrcodegen2.QrCode || (qrcodegen2.QrCode = {}));\n})(qrcodegen || (qrcodegen = {}));\n((qrcodegen2) => {\n  let QrSegment;\n  ((QrSegment2) => {\n    const _Mode = class {\n      constructor(modeBits, numBitsCharCount) {\n        this.modeBits = modeBits;\n        this.numBitsCharCount = numBitsCharCount;\n      }\n      numCharCountBits(ver) {\n        return this.numBitsCharCount[Math.floor((ver + 7) / 17)];\n      }\n    };\n    let Mode = _Mode;\n    Mode.NUMERIC = new _Mode(1, [10, 12, 14]);\n    Mode.ALPHANUMERIC = new _Mode(2, [9, 11, 13]);\n    Mode.BYTE = new _Mode(4, [8, 16, 16]);\n    Mode.KANJI = new _Mode(8, [8, 10, 12]);\n    Mode.ECI = new _Mode(7, [0, 0, 0]);\n    QrSegment2.Mode = Mode;\n  })(QrSegment = qrcodegen2.QrSegment || (qrcodegen2.QrSegment = {}));\n})(qrcodegen || (qrcodegen = {}));\nvar qrcodegen_default = qrcodegen;\n\n// src/index.tsx\n/**\n * @license qrcode.react\n * Copyright (c) Paul O'Shannessy\n * SPDX-License-Identifier: ISC\n */\nvar ERROR_LEVEL_MAP = {\n  L: qrcodegen_default.QrCode.Ecc.LOW,\n  M: qrcodegen_default.QrCode.Ecc.MEDIUM,\n  Q: qrcodegen_default.QrCode.Ecc.QUARTILE,\n  H: qrcodegen_default.QrCode.Ecc.HIGH\n};\nvar DEFAULT_SIZE = 128;\nvar DEFAULT_LEVEL = \"L\";\nvar DEFAULT_BGCOLOR = \"#FFFFFF\";\nvar DEFAULT_FGCOLOR = \"#000000\";\nvar DEFAULT_INCLUDEMARGIN = false;\nvar MARGIN_SIZE = 4;\nvar DEFAULT_IMG_SCALE = 0.1;\nfunction generatePath(modules, margin = 0) {\n  const ops = [];\n  modules.forEach(function(row, y) {\n    let start = null;\n    row.forEach(function(cell, x) {\n      if (!cell && start !== null) {\n        ops.push(`M${start + margin} ${y + margin}h${x - start}v1H${start + margin}z`);\n        start = null;\n        return;\n      }\n      if (x === row.length - 1) {\n        if (!cell) {\n          return;\n        }\n        if (start === null) {\n          ops.push(`M${x + margin},${y + margin} h1v1H${x + margin}z`);\n        } else {\n          ops.push(`M${start + margin},${y + margin} h${x + 1 - start}v1H${start + margin}z`);\n        }\n        return;\n      }\n      if (cell && start === null) {\n        start = x;\n      }\n    });\n  });\n  return ops.join(\"\");\n}\nfunction excavateModules(modules, excavation) {\n  return modules.slice().map((row, y) => {\n    if (y < excavation.y || y >= excavation.y + excavation.h) {\n      return row;\n    }\n    return row.map((cell, x) => {\n      if (x < excavation.x || x >= excavation.x + excavation.w) {\n        return cell;\n      }\n      return false;\n    });\n  });\n}\nfunction getImageSettings(cells, size, includeMargin, imageSettings) {\n  if (imageSettings == null) {\n    return null;\n  }\n  const margin = includeMargin ? MARGIN_SIZE : 0;\n  const numCells = cells.length + margin * 2;\n  const defaultSize = Math.floor(size * DEFAULT_IMG_SCALE);\n  const scale = numCells / size;\n  const w = (imageSettings.width || defaultSize) * scale;\n  const h = (imageSettings.height || defaultSize) * scale;\n  const x = imageSettings.x == null ? cells.length / 2 - w / 2 : imageSettings.x * scale;\n  const y = imageSettings.y == null ? cells.length / 2 - h / 2 : imageSettings.y * scale;\n  let excavation = null;\n  if (imageSettings.excavate) {\n    let floorX = Math.floor(x);\n    let floorY = Math.floor(y);\n    let ceilW = Math.ceil(w + x - floorX);\n    let ceilH = Math.ceil(h + y - floorY);\n    excavation = { x: floorX, y: floorY, w: ceilW, h: ceilH };\n  }\n  return { x, y, h, w, excavation };\n}\nvar SUPPORTS_PATH2D = function() {\n  try {\n    new Path2D().addPath(new Path2D());\n  } catch (e) {\n    return false;\n  }\n  return true;\n}();\nfunction QRCodeCanvas(props) {\n  const _a = props, {\n    value,\n    size = DEFAULT_SIZE,\n    level = DEFAULT_LEVEL,\n    bgColor = DEFAULT_BGCOLOR,\n    fgColor = DEFAULT_FGCOLOR,\n    includeMargin = DEFAULT_INCLUDEMARGIN,\n    style,\n    imageSettings\n  } = _a, otherProps = __objRest(_a, [\n    \"value\",\n    \"size\",\n    \"level\",\n    \"bgColor\",\n    \"fgColor\",\n    \"includeMargin\",\n    \"style\",\n    \"imageSettings\"\n  ]);\n  const imgSrc = imageSettings == null ? void 0 : imageSettings.src;\n  const _canvas = useRef(null);\n  const _image = useRef(null);\n  const [isImgLoaded, setIsImageLoaded] = useState(false);\n  useEffect(() => {\n    if (_canvas.current != null) {\n      const canvas = _canvas.current;\n      const ctx = canvas.getContext(\"2d\");\n      if (!ctx) {\n        return;\n      }\n      let cells = qrcodegen_default.QrCode.encodeText(value, ERROR_LEVEL_MAP[level]).getModules();\n      const margin = includeMargin ? MARGIN_SIZE : 0;\n      const numCells = cells.length + margin * 2;\n      const calculatedImageSettings = getImageSettings(cells, size, includeMargin, imageSettings);\n      const image = _image.current;\n      const haveImageToRender = calculatedImageSettings != null && image !== null && image.complete && image.naturalHeight !== 0 && image.naturalWidth !== 0;\n      if (haveImageToRender) {\n        if (calculatedImageSettings.excavation != null) {\n          cells = excavateModules(cells, calculatedImageSettings.excavation);\n        }\n      }\n      const pixelRatio = window.devicePixelRatio || 1;\n      canvas.height = canvas.width = size * pixelRatio;\n      const scale = size / numCells * pixelRatio;\n      ctx.scale(scale, scale);\n      ctx.fillStyle = bgColor;\n      ctx.fillRect(0, 0, numCells, numCells);\n      ctx.fillStyle = fgColor;\n      if (SUPPORTS_PATH2D) {\n        ctx.fill(new Path2D(generatePath(cells, margin)));\n      } else {\n        cells.forEach(function(row, rdx) {\n          row.forEach(function(cell, cdx) {\n            if (cell) {\n              ctx.fillRect(cdx + margin, rdx + margin, 1, 1);\n            }\n          });\n        });\n      }\n      if (haveImageToRender) {\n        ctx.drawImage(image, calculatedImageSettings.x + margin, calculatedImageSettings.y + margin, calculatedImageSettings.w, calculatedImageSettings.h);\n      }\n    }\n  });\n  useEffect(() => {\n    setIsImageLoaded(false);\n  }, [imgSrc]);\n  const canvasStyle = __spreadValues({ height: size, width: size }, style);\n  let img = null;\n  if (imgSrc != null) {\n    img = /* @__PURE__ */ React.createElement(\"img\", {\n      src: imgSrc,\n      key: imgSrc,\n      style: { display: \"none\" },\n      onLoad: () => {\n        setIsImageLoaded(true);\n      },\n      ref: _image\n    });\n  }\n  return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement(\"canvas\", __spreadValues({\n    style: canvasStyle,\n    height: size,\n    width: size,\n    ref: _canvas\n  }, otherProps)), img);\n}\nfunction QRCodeSVG(props) {\n  const _a = props, {\n    value,\n    size = DEFAULT_SIZE,\n    level = DEFAULT_LEVEL,\n    bgColor = DEFAULT_BGCOLOR,\n    fgColor = DEFAULT_FGCOLOR,\n    includeMargin = DEFAULT_INCLUDEMARGIN,\n    imageSettings\n  } = _a, otherProps = __objRest(_a, [\n    \"value\",\n    \"size\",\n    \"level\",\n    \"bgColor\",\n    \"fgColor\",\n    \"includeMargin\",\n    \"imageSettings\"\n  ]);\n  let cells = qrcodegen_default.QrCode.encodeText(value, ERROR_LEVEL_MAP[level]).getModules();\n  const margin = includeMargin ? MARGIN_SIZE : 0;\n  const numCells = cells.length + margin * 2;\n  const calculatedImageSettings = getImageSettings(cells, size, includeMargin, imageSettings);\n  let image = null;\n  if (imageSettings != null && calculatedImageSettings != null) {\n    if (calculatedImageSettings.excavation != null) {\n      cells = excavateModules(cells, calculatedImageSettings.excavation);\n    }\n    image = /* @__PURE__ */ React.createElement(\"image\", {\n      xlinkHref: imageSettings.src,\n      height: calculatedImageSettings.h,\n      width: calculatedImageSettings.w,\n      x: calculatedImageSettings.x + margin,\n      y: calculatedImageSettings.y + margin,\n      preserveAspectRatio: \"none\"\n    });\n  }\n  const fgPath = generatePath(cells, margin);\n  return /* @__PURE__ */ React.createElement(\"svg\", __spreadValues({\n    height: size,\n    width: size,\n    viewBox: `0 0 ${numCells} ${numCells}`\n  }, otherProps), /* @__PURE__ */ React.createElement(\"path\", {\n    fill: bgColor,\n    d: `M0,0 h${numCells}v${numCells}H0z`,\n    shapeRendering: \"crispEdges\"\n  }), /* @__PURE__ */ React.createElement(\"path\", {\n    fill: fgColor,\n    d: fgPath,\n    shapeRendering: \"crispEdges\"\n  }), image);\n}\nvar QRCode = (props) => {\n  const _a = props, { renderAs } = _a, otherProps = __objRest(_a, [\"renderAs\"]);\n  if (renderAs === \"svg\") {\n    return /* @__PURE__ */ React.createElement(QRCodeSVG, __spreadValues({}, otherProps));\n  }\n  return /* @__PURE__ */ React.createElement(QRCodeCanvas, __spreadValues({}, otherProps));\n};\nexport {\n  QRCodeCanvas,\n  QRCodeSVG,\n  QRCode as default\n};\n"],"names":["getToggleButtonUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","ToggleButtonRoot","styled","ButtonBase","name","overridesResolver","props","styles","ownerState","root","capitalize","size","selectedColorChannel","theme","selectedColor","color","palette","text","primary","main","vars","primaryChannel","mainChannel","_extends","typography","button","borderRadius","shape","padding","border","divider","action","active","fullWidth","width","toggleButtonClasses","disabled","disabledBackground","textDecoration","backgroundColor","hoverOpacity","alpha","selectedOpacity","fontSize","pxToRem","React","inProps","ref","useThemeProps","children","className","disableFocusRipple","onChange","onClick","selected","value","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","focusRipple","event","defaultPrevented","isValueSelected","candidate","undefined","Array","isArray","indexOf","getToggleButtonGroupUtilityClass","ToggleButtonGroupRoot","toggleButtonGroupClasses","grouped","orientation","vertical","display","flexDirection","marginLeft","borderLeft","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","marginTop","borderTop","exclusive","handleChange","buttonValue","newValue","index","slice","splice","concat","handleExclusiveChange","role","child","qrcodegen","qrcodegen2","__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__objRest","source","exclude","target","_QrCode","version","errorCorrectionLevel","dataCodewords","msk","this","modules","isFunction","MIN_VERSION","MAX_VERSION","RangeError","row","i","push","drawFunctionPatterns","allCodewords","addEccAndInterleave","drawCodewords","minPenalty","applyMask","drawFormatBits","penalty","getPenaltyScore","assert","mask","x","y","setFunctionModule","drawFinderPattern","alignPatPos","getAlignmentPatternPositions","numAlign","length","j","drawAlignmentPattern","drawVersion","data","formatBits","rem","bits","getBit","Math","floor","dy","dx","dist","max","abs","xx","yy","isDark","ver","ecl","getNumDataCodewords","numBlocks","NUM_ERROR_CORRECTION_BLOCKS","ordinal","blockEccLen","ECC_CODEWORDS_PER_BLOCK","rawCodewords","getNumRawDataModules","numShortBlocks","shortBlockLen","blocks","rsDiv","reedSolomonComputeDivisor","k","dat","ecc","reedSolomonComputeRemainder","result","forEach","block","right","vert","invert","Error","runColor","runX","runHistory","PENALTY_N1","finderPenaltyAddHistory","finderPenaltyCountPatterns","PENALTY_N3","finderPenaltyTerminateAndCount","runY","PENALTY_N2","dark","reduce","sum","total","ceil","PENALTY_N4","step","pos","n","core","currentRunColor","currentRunLength","pop","unshift","segs","QrSegment","makeSegments","encodeSegments","seg","makeBytes","dataUsedBits","minVersion","maxVersion","boostEcl","dataCapacityBits2","usedBits","getTotalBits","Ecc","MEDIUM","QUARTILE","HIGH","newEcl","bb","appendBits","mode","modeBits","numChars","numCharCountBits","getData","dataCapacityBits","min","padByte","degree","reedSolomonMultiply","divisor","map","_","factor","shift","coef","z","QrCode","val","len","cond","bitData","_QrSegment","Mode","BYTE","digits","isNumeric","parseInt","substr","NUMERIC","isAlphanumeric","temp","ALPHANUMERIC_CHARSET","charAt","ALPHANUMERIC","makeNumeric","makeAlphanumeric","toUtf8ByteArray","assignVal","ECI","NUMERIC_REGEX","test","ALPHANUMERIC_REGEX","ccbits","Infinity","str","encodeURI","charCodeAt","QrCode2","_Ecc","LOW","QrSegment2","_Mode","numBitsCharCount","KANJI","qrcodegen_default","ERROR_LEVEL_MAP","L","M","Q","H","DEFAULT_BGCOLOR","DEFAULT_FGCOLOR","generatePath","margin","ops","start","cell","join","excavateModules","excavation","h","w","getImageSettings","cells","includeMargin","imageSettings","numCells","defaultSize","scale","height","excavate","floorX","floorY","SUPPORTS_PATH2D","Path2D","addPath","e","QRCodeCanvas","_a","level","bgColor","fgColor","style","otherProps","imgSrc","src","_canvas","useRef","_image","useState","setIsImageLoaded","useEffect","current","canvas","ctx","getContext","encodeText","getModules","calculatedImageSettings","image","haveImageToRender","complete","naturalHeight","naturalWidth","pixelRatio","window","devicePixelRatio","fillStyle","fillRect","fill","rdx","cdx","drawImage","canvasStyle","img","onLoad","QRCodeSVG","xlinkHref","preserveAspectRatio","fgPath","viewBox","d","shapeRendering","QRCode","renderAs"],"sourceRoot":""}