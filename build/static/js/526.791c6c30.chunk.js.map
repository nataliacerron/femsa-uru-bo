{"version":3,"file":"static/js/526.791c6c30.chunk.js","mappings":"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","sources":["app/main/sliders/SlidersHeader.js","app/main/sliders/SlidersTableHead.js","app/main/sliders/SlidersTable.js","app/main/sliders/Sliders.js","app/main/sliders/store/index.js","app/main/sliders/store/sliderSlice.js","app/main/sliders/store/slidersSlice.js"],"sourcesContent":["import Button from \"@mui/material/Button\";\nimport Input from \"@mui/material/Input\";\nimport Paper from \"@mui/material/Paper\";\nimport Typography from \"@mui/material/Typography\";\nimport { motion } from \"framer-motion\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport FuseSvgIcon from \"@fuse/core/FuseSvgIcon\";\nimport {\n  selectSlidersSearchText,\n  setSlidersSearchText,\n} from \"./store/slidersSlice\";\n\nfunction SlidersHeader(props) {\n  const dispatch = useDispatch();\n  const searchText = useSelector(selectSlidersSearchText);\n\n  return (\n    <div className=\"flex flex-col sm:flex-row space-y-16 sm:space-y-0 flex-1 w-full items-center justify-between py-32 px-24 md:px-32\">\n      <Typography\n        component={motion.span}\n        initial={{ x: -20 }}\n        animate={{ x: 0, transition: { delay: 0.2 } }}\n        delay={300}\n        className=\"text-24 md:text-32 font-extrabold tracking-tight\"\n      >\n        Sliders\n      </Typography>\n\n      <div className=\"flex flex-col w-full sm:w-auto sm:flex-row space-y-16 sm:space-y-0 flex-1 items-center justify-end space-x-8\">\n        {/*<Paper\n          component={motion.div}\n          initial={{ y: -20, opacity: 0 }}\n          animate={{ y: 0, opacity: 1, transition: { delay: 0.2 } }}\n          className=\"flex items-center w-full sm:max-w-256 space-x-8 px-16 rounded-full border-1 shadow-0\"\n        >\n          <FuseSvgIcon color=\"disabled\">heroicons-solid:search</FuseSvgIcon>\n\n          <Input\n            placeholder=\"Busqueda de sliders\"\n            className=\"flex flex-1\"\n            disableUnderline\n            fullWidth\n            value={searchText}\n            inputProps={{\n              \"aria-label\": \"Search\",\n            }}\n            onChange={(ev) => dispatch(setSlidersSearchText(ev))}\n          />\n          </Paper>*/}\n        <motion.div\n          initial={{ opacity: 0, x: 20 }}\n          animate={{ opacity: 1, x: 0, transition: { delay: 0.2 } }}\n        >\n          <Button\n            className=\"\"\n            component={Link}\n            to=\"/sliders/new\"\n            variant=\"contained\"\n            color=\"secondary\"\n            startIcon={<FuseSvgIcon>heroicons-outline:plus</FuseSvgIcon>}\n          >\n            Agregar\n          </Button>\n        </motion.div>{\" \"}\n      </div>\n    </div>\n  );\n}\n\nexport default SlidersHeader;\n","import Checkbox from \"@mui/material/Checkbox\";\nimport IconButton from \"@mui/material/IconButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport MenuList from \"@mui/material/MenuList\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableRow from \"@mui/material/TableRow\";\nimport TableSortLabel from \"@mui/material/TableSortLabel\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Box } from \"@mui/system\";\nimport TableHead from \"@mui/material/TableHead\";\nimport FuseSvgIcon from \"@fuse/core/FuseSvgIcon\";\nimport { lighten } from \"@mui/material/styles\";\n\nconst rows = [\n  {\n    id: \"image\",\n    align: \"left\",\n    disablePadding: false,\n    label: \"Imagen\",\n    sort: true,\n  },\n  {\n    id: \"channel\",\n    align: \"left\",\n    disablePadding: false,\n    label: \"Canal\",\n    sort: true,\n  },\n\n\n  {\n    id: \"geck\",\n    align: \"left\",\n    disablePadding: false,\n    label: \"GEC\",\n    sort: true,\n  },\n  {\n    id: \"enabled\",\n    align: \"left\",\n    disablePadding: false,\n    label: \"Habilitado\",\n    sort: true,\n  },\n  {\n    id: \"actions\",\n    align: \"left\",\n    disablePadding: false,\n    label: \"Acciones\",\n    sort: true,\n  }\n];\n\nfunction SlidersTableHead(props) {\n  const { selectedSliderIds } = props;\n  const numSelected = selectedSliderIds.length;\n\n  const [selectedSlidersMenu, setSelectedSlidersMenu] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const createSortHandler = (property) => (event) => {\n    props.onRequestSort(event, property);\n  };\n\n  function openSelectedSlidersMenu(event) {\n    setSelectedSlidersMenu(event.currentTarget);\n  }\n\n  function closeSelectedSlidersMenu() {\n    setSelectedSlidersMenu(null);\n  }\n\n  return (\n    <TableHead>\n      <TableRow className=\"h-48 sm:h-64\">\n        {rows.map((row) => {\n          return (\n            <TableCell\n              sx={{\n                backgroundColor: (theme) =>\n                  theme.palette.mode === \"light\"\n                    ? lighten(theme.palette.background.default, 0.4)\n                    : lighten(theme.palette.background.default, 0.02),\n              }}\n              className=\"p-4 md:p-16\"\n              key={row.id}\n              align={row.align}\n              padding={row.disablePadding ? \"none\" : \"normal\"}\n              sortDirection={\n                props.order.id === row.id ? props.order.direction : false\n              }\n            >\n              {row.sort && (\n                <Tooltip\n                  title=\"Sort\"\n                  placement={\n                    row.align === \"right\" ? \"bottom-end\" : \"bottom-start\"\n                  }\n                  enterDelay={300}\n                >\n                  <TableSortLabel\n                    active={props.order.id === row.id}\n                    direction={props.order.direction}\n                    onClick={createSortHandler(row.id)}\n                    className=\"font-semibold\"\n                  >\n                    {row.label}\n                  </TableSortLabel>\n                </Tooltip>\n              )}\n            </TableCell>\n          );\n        }, this)}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nexport default SlidersTableHead;\n","import FuseScrollbars from \"@fuse/core/FuseScrollbars\";\nimport _ from \"@lodash\";\n\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Typography from \"@mui/material/Typography\";\nimport { motion } from \"framer-motion\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport withRouter from \"@fuse/core/withRouter\";\nimport FuseLoading from \"@fuse/core/FuseLoading\";\nimport FuseSvgIcon from \"@fuse/core/FuseSvgIcon\";\nimport {\n  getSliders,\n  selectSliders,\n  selectSlidersSearchText,\n} from \"./store/slidersSlice\";\nimport SlidersTableHead from \"./SlidersTableHead\";\nimport { Button, Tooltip } from \"@mui/material\";\n\nfunction SlidersTable(props) {\n  const dispatch = useDispatch();\n  const sliders = useSelector(selectSliders);\n  const searchText = useSelector(selectSlidersSearchText);\n\n  const [loading, setLoading] = useState(true);\n  const [selected, setSelected] = useState([]);\n  const [data, setData] = useState(sliders);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [order, setOrder] = useState({\n    direction: \"asc\",\n    id: null,\n  });\n\n  useEffect(() => {\n    dispatch(getSliders()).then((resp) => {\n      setLoading(false);\n    });\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (searchText.length !== 0) {\n      setData(\n        _.filter(sliders, (item) =>\n          item.type.toLowerCase().includes(searchText.toLowerCase())\n        )\n      );\n      setPage(0);\n    } else {\n      setData(sliders);\n    }\n  }, [sliders, searchText]);\n\n  function handleRequestSort(event, property) {\n    const id = property;\n    let direction = \"desc\";\n\n    if (order.id === property && order.direction === \"desc\") {\n      direction = \"asc\";\n    }\n\n    setOrder({\n      direction,\n      id,\n    });\n  }\n\n  function handleSelectAllClick(event) {\n    if (event.target.checked) {\n      setSelected(data.map((n) => n.id));\n      return;\n    }\n    setSelected([]);\n  }\n\n  function handleDeselect() {\n    setSelected([]);\n  }\n\n  /*function handleClick(item) {\n    props.navigate(`update`, {\n      state: {\n        image: item.image,\n        enabled: item.enabled,\n        type: item.type,\n        id: item.id,\n        channel: item.channel,\n        gec: item.gec,\n      },\n    });\n  }*/\n\n  function handleChangePage(event, value) {\n    setPage(value);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(event.target.value);\n  }\n\n  async function handleClickUpdate(item) {\n    await props.navigate(`update`, {\n      state: {\n        image: item.image,\n        enabled: item.enabled,\n        type: item.type,\n        id: item.id,\n        channel: item.channel,\n        gec: item.gec,\n      },\n    });\n  }\n\n  async function handleClickView(item) {\n    await props.navigate(`view`, {\n      state: {\n        ...item,\n      },\n    });\n  }\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-full\">\n        <FuseLoading />\n      </div>\n    );\n  }\n\n  if (data.length === 0) {\n    return (\n      <motion.div\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1, transition: { delay: 0.1 } }}\n        className=\"flex flex-1 items-center justify-center h-full\"\n      >\n        <Typography color=\"text.secondary\" variant=\"h5\">\n          No se encontraron Sliders\n        </Typography>\n      </motion.div>\n    );\n  }\n\n  return (\n    <div className=\"w-full flex flex-col min-h-full\">\n      <FuseScrollbars className=\"grow overflow-x-auto\">\n        <Table stickyHeader className=\"min-w-xl\" aria-labelledby=\"tableTitle\">\n          <SlidersTableHead\n            selectedSliderIds={selected}\n            order={order}\n            onSelectAllClick={handleSelectAllClick}\n            onRequestSort={handleRequestSort}\n            rowCount={data.length}\n            onMenuItemClick={handleDeselect}\n          />\n\n          <TableBody>\n            {_.orderBy(data, [(o) => o[order.id]], [order.direction])\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((n) => {\n                return (\n                  <TableRow\n                    className=\"h-72 cursor-pointer\"\n                    hover\n                    key={n.id}\n                  >\n                    <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                      <img\n                        width={100}\n                        className=\"rounded m-10\"\n                        src={n.image}\n                        alt={n.id}\n                      />\n                    </TableCell>\n                    <TableCell\n                      className=\"p-4 md:p-16 \"\n                      component=\"th\"\n                      scope=\"row\"\n                    >\n                      {n.channel}\n                    </TableCell>\n                    <TableCell\n                      className=\"p-4 md:p-16 \"\n                      component=\"th\"\n                      scope=\"row\"\n                    >\n                      {n.gec}\n                    </TableCell>\n\n                    <TableCell\n                      className=\"p-4 md:p-16\"\n                      component=\"th\"\n                      scope=\"row\"\n                    >\n                      {n.enabled ? (\n                        <FuseSvgIcon className=\"text-green\" size={20}>\n                          heroicons-outline:check-circle\n                        </FuseSvgIcon>\n                      ) : (\n                        <FuseSvgIcon className=\"text-red\" size={20}>\n                          heroicons-outline:minus-circle\n                        </FuseSvgIcon>\n                      )}\n                    </TableCell>\n                    <TableCell\n                      className=\"p-4 md:p-16\"\n                      component=\"th\"\n                      scope=\"row\"\n                    >\n                      {/*<Tooltip title='Ver' placement=\"top\">\n                        <Button onClick={(event) => handleClickView(n)}>\n                          <FuseSvgIcon size={20} color=\"action\">\n                            heroicons-outline:eye\n                          </FuseSvgIcon>\n                        </Button>\n                      </Tooltip>*/}\n                      <Tooltip title='Editar' placement=\"top\">\n                        <Button onClick={(event) => handleClickUpdate(n)}>\n                          <FuseSvgIcon size={20} color=\"action\">\n                            heroicons-outline:pencil\n                          </FuseSvgIcon>\n                        </Button>\n                      </Tooltip>\n\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </FuseScrollbars>\n\n      <TablePagination\n        className=\"shrink-0 border-t-1\"\n        component=\"div\"\n        count={data.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        backIconButtonProps={{\n          \"aria-label\": \"Previous Page\",\n        }}\n        nextIconButtonProps={{\n          \"aria-label\": \"Next Page\",\n        }}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n    </div>\n  );\n}\n\nexport default withRouter(SlidersTable);\n","import FusePageCarded from \"@fuse/core/FusePageCarded\";\nimport withReducer from \"app/store/withReducer\";\nimport useThemeMediaQuery from \"@fuse/hooks/useThemeMediaQuery\";\nimport reducer from \"./store\";\nimport SlidersHeader from \"./SlidersHeader\";\nimport SlidersTable from \"./SlidersTable\";\n\nfunction Sliders() {\n  const isMobile = useThemeMediaQuery((theme) => theme.breakpoints.down(\"lg\"));\n\n  return (\n    <FusePageCarded\n      header={<SlidersHeader />}\n      content={<SlidersTable />}\n      scroll={isMobile ? \"normal\" : \"content\"}\n    />\n  );\n}\n\nexport default withReducer(\"slidersApp\", reducer)(Sliders);\n","import { combineReducers } from \"@reduxjs/toolkit\";\n\nimport sliders from \"./slidersSlice\";\nimport slider from \"./sliderSlice\";\n\nconst reducer = combineReducers({\n  sliders,\n  slider,\n});\n\nexport default reducer;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { API_VERSION, BASE_URL, TOKEN } from \"app/configs/settingsConfig\";\n\n\nexport const addSlider = createAsyncThunk(\n  \"slidersApp/slider/addSlider\",\n  async (sliderData, { dispatch, getState }) => {\n    console.log('slideeeeer', sliderData)\n    const response = await axios.post(\n      BASE_URL + API_VERSION + \"/back/sliders\",\n      sliderData,\n      { headers: { Authorization: TOKEN } }\n    );\n    const data = await response.data;\n    return data;\n  }\n);\n\nexport const updateSlider = createAsyncThunk(\n  \"slidersApp/slider/updateSlider\",\n  async (sliderData, { dispatch, getState }) => {\n    const response = await axios.put(\n      BASE_URL + API_VERSION + \"/back/sliders\",\n      sliderData,\n      { headers: { Authorization: TOKEN } }\n    );\n    const data = await response.data;\n    return data;\n  }\n);\n\nexport const removeSlider = createAsyncThunk(\n  \"slidersApp/slider/removeSlider\",\n  async (val, { dispatch, getState }) => {\n    const { id } = getState().slidersApp.slider;\n    const data = { id: id };\n    await axios.delete(BASE_URL + API_VERSION + \"/back/sliders\", {\n      headers: { Authorization: TOKEN },\n      data,\n    });\n    return id;\n  }\n);\n\n\nconst sliderSlice = createSlice({\n  name: \"slidersApp/slider\",\n  initialState: {\n    slider: { image: \"\", enabled: false, channel: \"\", gec: \"\", type: \"\" },\n  },\n  reducers: {\n    resetSlider: () => null,\n    newSlider: {\n      reducer: (state, action) => action.payload,\n      prepare: (event) => ({\n        payload: {\n          image: \"\",\n          enabled: false,\n          channel: \"\",\n          gec: \"\",\n          type: \"\",\n        },\n      }),\n    },\n    setSlider: {\n      reducer: (state, action) => action.payload,\n    },\n  },\n  extraReducers: {\n    [addSlider.fulfilled]: (state, action) => action.payload,\n    [updateSlider.fulfilled]: (state, action) => action.payload,\n    [removeSlider.fulfilled]: (state, action) => action.payload,\n  },\n});\n\nexport const { resetSlider, newSlider, setSlider } = sliderSlice.actions;\n\nexport const selectSlider = ({ slidersApp }) => slidersApp.slider;\n\nexport default sliderSlice.reducer;\n","import {\n  createAsyncThunk,\n  createEntityAdapter,\n  createSlice,\n} from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { API_VERSION, API_VERSION3, BASE_URL, TOKEN } from \"app/configs/settingsConfig\";\n\n\nexport const getSliders = createAsyncThunk(\n  \"slidersApp/getSliders\",\n  async () => {\n    const response = await axios.get(BASE_URL + API_VERSION + \"/back/sliders/all\", {\n      headers: { Authorization: TOKEN },\n    });\n    let data = await response.data;\n    data.sort((a, b) => new Date(b.updated_at) - new Date(a.updated_at));\n    return data;\n  }\n);\n\nexport const getVariables = createAsyncThunk(\"slidersApp/getVariables\", async () => {\n  const response = await axios.get(BASE_URL + API_VERSION3 + \"/back/variables\", {\n    headers: { Authorization: TOKEN },\n  });\n  const data = await response.data;\n  return data;\n});\n\nconst slidersAdapter = createEntityAdapter({});\n\nexport const { selectAll: selectSliders, selectById: selectSliderById } =\n  slidersAdapter.getSelectors((state) => state.slidersApp.sliders);\n\nconst slidersSlice = createSlice({\n  name: \"slidersApp\",\n  initialState: slidersAdapter.getInitialState({\n    searchText: \"\",\n  }),\n  reducers: {\n    setSlidersSearchText: {\n      reducer: (state, action) => {\n        state.searchText = action.payload;\n      },\n      prepare: (event) => ({ payload: event.target.value || \"\" }),\n    },\n  },\n  extraReducers: {\n    [getSliders.fulfilled]: slidersAdapter.setAll,\n    [getVariables.fulfilled]: (state, action) => {\n      state.variables = action.payload;\n    },\n  },\n});\n\nexport const { setSlidersSearchText } = slidersSlice.actions;\n\nexport const selectSlidersSearchText = ({ slidersApp }) =>\n  slidersApp.sliders.searchText;\n\nexport default slidersSlice.reducer;\n"],"names":["props","useDispatch","useSelector","selectSlidersSearchText","className","Typography","component","motion","initial","x","animate","transition","delay","opacity","Button","Link","to","variant","color","startIcon","FuseSvgIcon","rows","id","align","disablePadding","label","sort","selectedSliderIds","length","useState","TableHead","TableRow","map","row","TableCell","sx","backgroundColor","theme","palette","mode","lighten","background","default","padding","sortDirection","order","direction","Tooltip","title","placement","enterDelay","TableSortLabel","active","onClick","property","event","onRequestSort","this","withRouter","dispatch","sliders","selectSliders","searchText","loading","setLoading","selected","setSelected","data","setData","page","setPage","rowsPerPage","setRowsPerPage","setOrder","item","navigate","state","image","enabled","type","channel","gec","useEffect","getSliders","then","resp","_","toLowerCase","includes","FuseLoading","FuseScrollbars","Table","stickyHeader","onSelectAllClick","target","checked","n","rowCount","onMenuItemClick","TableBody","o","slice","hover","scope","width","src","alt","size","handleClickUpdate","TablePagination","count","backIconButtonProps","nextIconButtonProps","onPageChange","value","onRowsPerPageChange","withReducer","reducer","isMobile","useThemeMediaQuery","breakpoints","down","FusePageCarded","header","content","scroll","combineReducers","slider","addSlider","createAsyncThunk","sliderData","getState","console","log","axios","BASE_URL","API_VERSION","headers","Authorization","TOKEN","response","updateSlider","removeSlider","val","slidersApp","sliderSlice","createSlice","name","initialState","reducers","resetSlider","newSlider","action","payload","prepare","setSlider","extraReducers","fulfilled","actions","selectSlider","a","b","Date","updated_at","getVariables","API_VERSION3","slidersAdapter","createEntityAdapter","getSelectors","selectAll","slidersSlice","selectById","getInitialState","setSlidersSearchText","setAll","variables"],"sourceRoot":""}